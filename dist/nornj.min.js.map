{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///nornj.min.js","webpack:///webpack/bootstrap 78a995206a891aa46881","webpack:///./src/base.js","webpack:///./src/core.js","webpack:///./src/utils/utils.js","webpack:///./src/utils/tools.js","webpack:///./~/object-assign/index.js","webpack:///./src/transforms/transformElement.js","webpack:///./src/transforms/transformParam.js","webpack:///./src/transforms/transformData.js","webpack:///./src/utils/escape.js","webpack:///./src/parser/checkElem.js","webpack:///./src/utils/registerComponent.js","webpack:///./src/helpers/filter.js","webpack:///./src/helpers/expression.js","webpack:///./src/utils/setTmplRule.js","webpack:///./src/compiler/compile.js","webpack:///./src/compiler/buildRuntime.js","webpack:///./src/utils/replaceSpecialSymbol.js","webpack:///./src/parser/checkStringElem.js","webpack:///./src/utils/shim.js","webpack:///./src/utils/tmplByKey.js","webpack:///./src/config.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","nj","utils","compiler","compileStringTmpl","tmplByKey","config","assign","global","self","NornJ","apply","arguments","createElement","components","asts","templates","errorTitle","tmplRule","tools","transformElement","transformParam","transformData","escape","checkElem","registerComponent","filter","expression","setTmplRule","listPush","arr1","arr2","arrayPush","isArray","obj","Array","isObject","type","isString","Object","prototype","toString","_getProperty","key","isArrayLike","length","_getLength","each","func","context","isArr","i","l","ret","keys","k","flatten","output","idx","value","j","len","noop","throwIf","val","msg","Error","warn","uniqueKey","str","hash","chr","charCodeAt","lightObj","create","clearQuot","regex","charF","replace","toCamelCase","indexOf","letter","substr","toUpperCase","push","toObject","undefined","TypeError","shouldUseNative","test1","String","getOwnPropertyNames","test2","fromCharCode","order2","map","n","join","test3","split","forEach","e","hasOwnProperty","propIsEnumerable","propertyIsEnumerable","target","source","from","symbols","to","s","getOwnPropertySymbols","getXmlOpenTag","xmlOpenTag","exec","isXmlSelfCloseTag","REGEX_XML_SELF_CLOSE_TAG","test","verifySelfCloseTag","tagName","OMITTED_CLOSE_TAGS","toLowerCase","getOpenTagParams","noXml","matchArr","pattern","lastIndexOf","isXmlCloseTag","getInsideBraceParam","insideBraceParam","isExpr","ret1","expr","ret2","exprBraceParam","isExprCloseTag","exprRule","isTmpl","addTmpl","node","parent","name","paramsP","params","tmpls","objT","strs","tranParam","compiledParam","isParamsExpr","addParamsExpr","paramsExpr","content","area","base","br","col","embed","hr","img","input","keygen","link","meta","param","track","wbr","compiledParams","v","compiledProp","prop","filtersTmp","filters","trim","slice","retF","_getFilterParam","filterObj","filterName","paramsF","parentNum","isStr","REGEX_FILTER_PARAM","_getReplaceParam","replaceParam","item","_quots","replaceSplit","props","isAll","retP","startRule","isTmplPlace","styleProps","getDatasValue","datas","getNewData","data","addData","newContextVars","p1","p2","p3","_parent","hasItem","fallback","index","multiData","fixPropName","assignStringProp","paramsE","exprRet","fn","p4","tmplWrap","configs","main","args","_njParent","template","fns","useString","exprs","h","text","match","ESCAPE_LOOKUP","&",">","<","\"","'","parentContent","hasElse","_njShim","first","exprParams","openTagName","last","isElemNode","hasCloseTag","tranElem","exprName","refer","selfCloseTag","elseIndex","pushContent","retR","typeRefer","tagParams","end","checkContentElem","contentElse","component","_commonConfig","registerFilter","options","filterConfig","count","no","equal","lt","val1","val2","noEqual","parseFloat","gt","add","isFloat","parseInt","int","float","bool","_defaultConfig","result","inverse","newContext","registerExpr","exprConfig","if","useUnless","referR","unless","thiz","retI","spreadparam","value1","value2","for","start","blank","spread","_createRegExp","reg","mode","RegExp","_clearRepeat","char","endRule","externalRule","propRule","templateRule","external","allRules","firstChar","otherChars","spChars","exprRules","escapeExprRule","escapeExternalRule","replaceBraceParam","externalSplit","include","compile","tmpl","tmplName","outputH","fileName","tmplFns","isObj","_createAstRoot","includeParser","buildRuntime","compileH","precompile","_buildFn","level","fnStr","isTmplExpr","retType","counter","_type","_typeRefer","_params","_paramsE","_compParam","_dataRefer","_expr","_this","_value","_filter","_thisF","_children","_buildVar","_buildContent","Function","_buildPropData","noEscape","dataValueStr","special","valueStr","filterStr","o","_filterC","_thisFC","configF","noConfig","reduce","_buildEscape","_buildProps","str0","propData","strI","_noT","_njEx","JSON","stringify","_buildNode","textStr","_buildRender","replaceSpecialSymbol","_exprC","_dataReferC","dataReferStr","_thisC","configE","newContextP","paramsEStr","_no","_typeC","typeStr","_typeReferC","valueStrT","paramsStr","_paramsC","_paramsEC","paramKeys","onlyKey","_compParamC","_childrenC","_selfClose","nodeType","retStr","_buildLevelSpace","levelSpace","ast","REGEX_SYMBOLS","all","SPACIAL_SYMBOLS","nbsp","ensp","emsp","thinsp","zwnj","zwj","amp","tmplKey","strTmpls","exArgs","xmls","splitNo","fullXml","xml","arg","isEx","useShim","exArg","shim","_clearNotesAndBlank","_paramsStr","_checkStringElem","_setTmplProps","current","elem","elemName","textBefore","textAfter","_formatText","_setText","_setSelfCloseElem","_setElem","_cascadeArr","njKey","elemArr","bySelfClose","substring","retS","_getSplitParams","retC","begin","propN","splitNos","t","shift","render","renderH","checkStringElem","delimiters"],"mappings":"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","file":"nornj.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NornJ\"] = factory();\n\telse\n\t\troot[\"NornJ\"] = factory();\n})(this, function() {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"NornJ\"] = factory();\n\telse\n\t\troot[\"NornJ\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  utils = __webpack_require__(2),\r\n\t  compiler = __webpack_require__(14),\r\n\t  compileStringTmpl = __webpack_require__(17),\r\n\t  tmplByKey = __webpack_require__(19),\r\n\t  config = __webpack_require__(20);\r\n\t\r\n\tnj.compileStringTmpl = compileStringTmpl;\r\n\tnj.tmplByKey = tmplByKey;\r\n\tnj.config = config;\r\n\tutils.assign(nj, compiler, utils);\r\n\t\r\n\tvar global = typeof self !== 'undefined' ? self : this;\r\n\t\r\n\tmodule.exports = global.NornJ = global.nj = nj;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tfunction nj() {\r\n\t  return nj.compileStringTmpl.apply(null, arguments);\r\n\t}\r\n\t\r\n\tnj.createElement = null;\r\n\tnj.components = {};\r\n\tnj.asts = {};\r\n\tnj.templates = {};\r\n\tnj.errorTitle = 'NornJ:';\r\n\tnj.tmplRule = {};\r\n\t\r\n\tmodule.exports = nj;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar tools = __webpack_require__(3),\r\n\t  transformElement = __webpack_require__(5),\r\n\t  transformParam = __webpack_require__(6),\r\n\t  transformData = __webpack_require__(7),\r\n\t  escape = __webpack_require__(8),\r\n\t  checkElem = __webpack_require__(9),\r\n\t  registerComponent = __webpack_require__(10),\r\n\t  filter = __webpack_require__(11),\r\n\t  expression = __webpack_require__(12),\r\n\t  setTmplRule = __webpack_require__(13);\r\n\t\r\n\t//Set default param rule\r\n\tsetTmplRule();\r\n\t\r\n\tmodule.exports = tools.assign(\r\n\t  {\r\n\t    escape: escape,\r\n\t    setTmplRule: setTmplRule\r\n\t  },\r\n\t  checkElem,\r\n\t  registerComponent,\r\n\t  filter,\r\n\t  expression,\r\n\t  tools,\r\n\t  transformElement,\r\n\t  transformParam,\r\n\t  transformData\r\n\t);\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  assign = __webpack_require__(4),\r\n\t  arrayPush = Array.prototype.push,\r\n\t  errorTitle = nj.errorTitle;\r\n\t\r\n\t//Push one by one to array\r\n\tfunction listPush(arr1, arr2) {\r\n\t  arrayPush.apply(arr1, arr2);\r\n\t  return arr1;\r\n\t}\r\n\t\r\n\t//判断是否为数组\r\n\tfunction isArray(obj) {\r\n\t  return Array.isArray(obj);\r\n\t}\r\n\t\r\n\t//判断是否为对象\r\n\tfunction isObject(obj) {\r\n\t  var type = typeof obj;\r\n\t  return !isArray(obj) && (type === 'function' || type === 'object' && !!obj);\r\n\t}\r\n\t\r\n\t//判断是否为字符串\r\n\tfunction isString(obj) {\r\n\t  return Object.prototype.toString.call(obj) === '[object String]';\r\n\t}\r\n\t\r\n\t//获取属性值\r\n\tfunction _getProperty(key) {\r\n\t  return function (obj) {\r\n\t    return obj == null ? void 0 : obj[key];\r\n\t  };\r\n\t}\r\n\t\r\n\t//是否为类数组\r\n\tvar _getLength = _getProperty('length');\r\n\tfunction isArrayLike(obj) {\r\n\t  var length = _getLength(obj);\r\n\t  return typeof length == 'number' && length >= 0;\r\n\t}\r\n\t\r\n\t//遍历数组或对象\r\n\tfunction each(obj, func, context, isArr) {\r\n\t  if (!obj) {\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  if (isArr == null) {\r\n\t    isArr = isArrayLike(obj);\r\n\t  }\r\n\t\r\n\t  //设置回调函数上下文\r\n\t  context = context ? context : obj;\r\n\t\r\n\t  if (isArr) {\r\n\t    for (var i = 0, l = obj.length; i < l; i++) {\r\n\t      var ret = func.call(context, obj[i], i);\r\n\t\r\n\t      if (ret === false) {\r\n\t        break;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    var keys = Object.keys(obj),\r\n\t      l = keys.length;\r\n\t    for (var i = 0; i < l; i++) {\r\n\t      var k = keys[i],\r\n\t        ret = func.call(context, obj[k], k, i, l);\r\n\t\r\n\t      if (ret === false) {\r\n\t        break;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t//Transform multidimensional array to one-dimensional array\r\n\tfunction flatten(obj) {\r\n\t  var output = [],\r\n\t    idx = 0;\r\n\t\r\n\t  if (isArray(obj)) {\r\n\t    for (var i = 0, l = _getLength(obj); i < l; i++) {\r\n\t      var value = obj[i];\r\n\t      //flatten current level of array or arguments object\r\n\t      value = flatten(value);\r\n\t\r\n\t      var j = 0, len = value.length;\r\n\t      output.length += len;\r\n\t      while (j < len) {\r\n\t        output[idx++] = value[j++];\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    output[idx++] = obj;\r\n\t  }\r\n\t\r\n\t  return output;\r\n\t}\r\n\t\r\n\t//Noop function\r\n\tfunction noop() { }\r\n\t\r\n\t//抛出异常\r\n\tfunction throwIf(val, msg, type) {\r\n\t  if (!val) {\r\n\t    switch (type) {\r\n\t      case 'expr':\r\n\t        throw Error(errorTitle + 'Expression \"' + msg + '\" is undefined, please check it has been registered.');\r\n\t      default:\r\n\t        throw Error(errorTitle + (msg || val));\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t//Print warn\r\n\tfunction warn(msg, type) {\r\n\t  var ret = errorTitle;\r\n\t  switch (type) {\r\n\t    case 'filter':\r\n\t      ret += 'A filter called \"' + msg + '\" is undefined.';\r\n\t    default:\r\n\t      ret += msg;\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//create a unique key\r\n\tfunction uniqueKey(str, hash) {\r\n\t  var len = str.length;\r\n\t  if (len == 0) {\r\n\t    return str;\r\n\t  }\r\n\t  if (hash == null) {\r\n\t    hash = 0;\r\n\t  }\r\n\t\r\n\t  var i, chr;\r\n\t  for (i = 0, len = str.length; i < len; i++) {\r\n\t    chr = str.charCodeAt(i);\r\n\t    hash = ((hash << 5) - hash) + chr;\r\n\t    hash |= 0;\r\n\t  }\r\n\t\r\n\t  return hash;\r\n\t}\r\n\t\r\n\t//create light weight object\r\n\tfunction lightObj() {\r\n\t  return Object.create(null);\r\n\t}\r\n\t\r\n\t//Clear quotation marks\r\n\tfunction clearQuot(value) {\r\n\t  var charF = value[0],\r\n\t    regex;\r\n\t\r\n\t  if (charF === '\\'') {\r\n\t    regex = /[']+/g;\r\n\t  }\r\n\t  else if (charF === '\"') {\r\n\t    regex = /[\"]+/g;\r\n\t  }\r\n\t  if (regex) {\r\n\t    value = value.replace(regex, '');\r\n\t  }\r\n\t\r\n\t  return value;\r\n\t}\r\n\t\r\n\t//Transform to camel-case\r\n\tfunction toCamelCase(str) {\r\n\t  if (str.indexOf('-') > -1) {\r\n\t    str = str.replace(/-\\w/g, function (letter) {\r\n\t      return letter.substr(1).toUpperCase();\r\n\t    });\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t}\r\n\t\r\n\tvar tools = {\r\n\t  isArray: isArray,\r\n\t  isArrayLike: isArrayLike,\r\n\t  isObject: isObject,\r\n\t  isString: isString,\r\n\t  each: each,\r\n\t  flatten: flatten,\r\n\t  throwIf: throwIf,\r\n\t  assign: assign,\r\n\t  uniqueKey: uniqueKey,\r\n\t  lightObj: lightObj,\r\n\t  listPush: listPush,\r\n\t  clearQuot: clearQuot,\r\n\t  toCamelCase: toCamelCase,\r\n\t  warn: warn,\r\n\t  noop: noop\r\n\t};\r\n\t\r\n\tmodule.exports = tools;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t/* eslint-disable no-unused-vars */\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\tvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\t\n\tfunction toObject(val) {\n\t\tif (val === null || val === undefined) {\n\t\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t\t}\n\t\n\t\treturn Object(val);\n\t}\n\t\n\tfunction shouldUseNative() {\n\t\ttry {\n\t\t\tif (!Object.assign) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// Detect buggy property enumeration order in older V8 versions.\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\t\ttest1[5] = 'de';\n\t\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test2 = {};\n\t\t\tfor (var i = 0; i < 10; i++) {\n\t\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t\t}\n\t\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\t\treturn test2[n];\n\t\t\t});\n\t\t\tif (order2.join('') !== '0123456789') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\t\tvar test3 = {};\n\t\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\t\ttest3[letter] = letter;\n\t\t\t});\n\t\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\t\treturn false;\n\t\t\t}\n\t\n\t\t\treturn true;\n\t\t} catch (e) {\n\t\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\tmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\t\tvar from;\n\t\tvar to = toObject(target);\n\t\tvar symbols;\n\t\n\t\tfor (var s = 1; s < arguments.length; s++) {\n\t\t\tfrom = Object(arguments[s]);\n\t\n\t\t\tfor (var key in from) {\n\t\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\t\tto[key] = from[key];\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (Object.getOwnPropertySymbols) {\n\t\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\n\t\treturn to;\n\t};\n\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3),\r\n\t  tranParam = __webpack_require__(6),\r\n\t  tmplRule = nj.tmplRule;\r\n\t\r\n\t//提取xml open tag\r\n\tfunction getXmlOpenTag(obj) {\r\n\t  return tmplRule.xmlOpenTag.exec(obj);\r\n\t}\r\n\t\r\n\t//验证xml self close tag\r\n\tvar REGEX_XML_SELF_CLOSE_TAG = /^<[^>]+\\/>$/i;\r\n\tfunction isXmlSelfCloseTag(obj) {\r\n\t  return REGEX_XML_SELF_CLOSE_TAG.test(obj);\r\n\t}\r\n\t\r\n\t//Verify self close tag name\r\n\tvar OMITTED_CLOSE_TAGS = {\r\n\t  'area': true,\r\n\t  'base': true,\r\n\t  'br': true,\r\n\t  'col': true,\r\n\t  'embed': true,\r\n\t  'hr': true,\r\n\t  'img': true,\r\n\t  'input': true,\r\n\t  'keygen': true,\r\n\t  'link': true,\r\n\t  'meta': true,\r\n\t  'param': true,\r\n\t  'source': true,\r\n\t  'track': true,\r\n\t  'wbr': true\r\n\t};\r\n\tfunction verifySelfCloseTag(tagName) {\r\n\t  return OMITTED_CLOSE_TAGS[tagName.toLowerCase()];\r\n\t}\r\n\t\r\n\t//Extract parameters inside the xml open tag\r\n\tfunction getOpenTagParams(obj, noXml) {\r\n\t  var pattern = /[\\s]+([^\\s=>]+)(=(('[^']+')|(\"[^\"]+\")|([^\"'\\s]+)))?/g,\r\n\t    matchArr, ret;\r\n\t\r\n\t  while ((matchArr = pattern.exec(obj))) {\r\n\t    var key = matchArr[1];\r\n\t    if (key === '/' || key === '/>') {  //If match to the last \"/\" or \"/>\", then continue the loop.\r\n\t      continue;\r\n\t    }\r\n\t\r\n\t    if (!ret) {\r\n\t      ret = [];\r\n\t    }\r\n\t\r\n\t    var value = matchArr[3],\r\n\t      charF, len, regex;\r\n\t    if (value != null) {\r\n\t      value = tools.clearQuot(value);  //Remove quotation marks\r\n\t    }\r\n\t    else {\r\n\t      value = key;  //Match to Similar to \"checked\" or \"disabled\" attribute.\r\n\t    }\r\n\t    len = value.length;\r\n\t\r\n\t    //Removed at the end of \"/>\" or \">\".\r\n\t    if (!noXml) {\r\n\t      if (value.lastIndexOf('/>') === len - 2) {\r\n\t        value = value.replace(/\\/>/, '');\r\n\t      }\r\n\t      else if (value.lastIndexOf('>') === len - 1) {\r\n\t        value = value.replace(/>/, '');\r\n\t      }\r\n\t    }\r\n\t\r\n\t    ret.push({ key: key, value: value });\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//判断xml close tag\r\n\tfunction isXmlCloseTag(obj, tagName) {\r\n\t  return tools.isString(obj) && obj.toLowerCase() === '</' + tagName + '>';\r\n\t}\r\n\t\r\n\t//get inside brace param\r\n\tfunction getInsideBraceParam(obj) {\r\n\t  return tmplRule.insideBraceParam.exec(obj);\r\n\t}\r\n\t\r\n\t//判断块表达式并返回参数\r\n\tfunction isExpr(obj) {\r\n\t  var ret, ret1 = tmplRule.expr.exec(obj);\r\n\t  if (ret1) {\r\n\t    ret = [ret1[1]];\r\n\t\r\n\t    var ret2 = tmplRule.exprBraceParam.exec(obj);  //提取各参数\r\n\t    if (ret2) {\r\n\t      ret.push(ret2[0]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//判断块表达式close tag\r\n\tfunction isExprCloseTag(obj, tagName) {\r\n\t  return tools.isString(obj) && obj === '/' + tmplRule.exprRule + tagName;\r\n\t}\r\n\t\r\n\t//判断是否模板元素\r\n\tfunction isTmpl(obj) {\r\n\t  return obj === 'tmpl';\r\n\t}\r\n\t\r\n\t//加入到模板集合中\r\n\tfunction addTmpl(node, parent, name) {\r\n\t  var paramsP = parent.params;\r\n\t  if (!paramsP) {\r\n\t    paramsP = parent.params = tools.lightObj();\r\n\t  }\r\n\t\r\n\t  var tmpls = paramsP.tmpls;\r\n\t  if (!tmpls) {\r\n\t    var objT = { length: 0 };\r\n\t    if(name != null) {\r\n\t      objT[name] = node;\r\n\t    }\r\n\t    else {\r\n\t      objT['0'] = node;\r\n\t      objT.length = 1;\r\n\t    }\r\n\t\r\n\t    paramsP.tmpls = tranParam.compiledParam(objT);\r\n\t  }\r\n\t  else {  //Insert the compiled template to the parameter name for \"tmpls\"'s \"strs\" array.\r\n\t    var objT = tmpls.strs[0],\r\n\t      len = objT.length;\r\n\t\r\n\t    if(name != null) {\r\n\t      objT[name] = node;\r\n\t    }\r\n\t    else {\r\n\t      objT[len] = node;\r\n\t      objT.length = ++len;\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t//Test whether as parameters expression\r\n\tfunction isParamsExpr(obj) {\r\n\t  return obj === 'params' || obj === 'props';\r\n\t}\r\n\t\r\n\t//Add to the \"paramsExpr\" property of the parent node\r\n\tfunction addParamsExpr(node, parent) {\r\n\t  if (!parent.paramsExpr) {\r\n\t    parent.paramsExpr = node;\r\n\t  }\r\n\t  else {\r\n\t    tools.listPush(parent.paramsExpr.content, node.content);\r\n\t  }\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  getXmlOpenTag: getXmlOpenTag,\r\n\t  isXmlSelfCloseTag: isXmlSelfCloseTag,\r\n\t  verifySelfCloseTag: verifySelfCloseTag,\r\n\t  getOpenTagParams: getOpenTagParams,\r\n\t  isXmlCloseTag: isXmlCloseTag,\r\n\t  getInsideBraceParam: getInsideBraceParam,\r\n\t  isExpr: isExpr,\r\n\t  isExprCloseTag: isExprCloseTag,\r\n\t  isTmpl: isTmpl,\r\n\t  addTmpl: addTmpl,\r\n\t  isParamsExpr: isParamsExpr,\r\n\t  addParamsExpr: addParamsExpr\r\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3),\r\n\t  tmplRule = nj.tmplRule;\r\n\t\r\n\t//Get compiled parameters from a object\r\n\tfunction compiledParams(obj) {\r\n\t  var ret = tools.lightObj();\r\n\t  tools.each(obj, function (v, k) {\r\n\t    ret[k] = compiledParam(v);\r\n\t  }, false, false);\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Get compiled property\r\n\tfunction compiledProp(prop, isString) {\r\n\t  var ret = tools.lightObj();\r\n\t\r\n\t  //Extract the dot data path to the 'prop' filter.\r\n\t  if (!isString && prop.indexOf('.') > -1) {\r\n\t    prop = prop.replace(/\\.([^\\s.|\\/]+)/g, '|prop($1)');\r\n\t  }\r\n\t\r\n\t  //If there are colons in the property,then use filter\r\n\t  if (prop.indexOf('|') >= 0) {\r\n\t    var filters = [],\r\n\t      filtersTmp;\r\n\t    filtersTmp = prop.split('|');\r\n\t    prop = filtersTmp[0].trim();  //Extract property\r\n\t\r\n\t    filtersTmp = filtersTmp.slice(1);\r\n\t    tools.each(filtersTmp, function (filter) {\r\n\t      var retF = _getFilterParam(filter.trim()),\r\n\t        filterObj = tools.lightObj(),\r\n\t        filterName = retF[1].toLowerCase();  //Get filter name\r\n\t\r\n\t      if (filterName) {\r\n\t        var paramsF = retF[3];  //Get filter param\r\n\t\r\n\t        //Multiple params are separated by commas.\r\n\t        if (paramsF) {\r\n\t          var params = [];\r\n\t          tools.each(paramsF.split(','), function (p) {\r\n\t            params[params.length] = tools.clearQuot(p).trim();\r\n\t          }, false, true);\r\n\t\r\n\t          filterObj.params = params;\r\n\t        }\r\n\t\r\n\t        filterObj.name = filterName;\r\n\t        filters.push(filterObj);\r\n\t      }\r\n\t    }, false, true);\r\n\t\r\n\t    ret.filters = filters;\r\n\t  }\r\n\t\r\n\t  //Extract the parent data path\r\n\t  if (!isString && prop.indexOf('../') > -1) {\r\n\t    var n = 0;\r\n\t    prop = prop.replace(/\\.\\.\\//g, function () {\r\n\t      n++;\r\n\t      return '';\r\n\t    });\r\n\t\r\n\t    ret.parentNum = n;\r\n\t  }\r\n\t\r\n\t  ret.name = prop;\r\n\t  if (isString) {  //Sign the parameter is a pure string.\r\n\t    ret.isStr = true;\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Get filter param\r\n\tvar REGEX_FILTER_PARAM = /([\\w$]+)(\\(([^()]+)\\))*/;\r\n\tfunction _getFilterParam(obj) {\r\n\t  return REGEX_FILTER_PARAM.exec(obj);\r\n\t}\r\n\t\r\n\t//Extract replace parameters\r\n\tvar _quots = ['\\'', '\"'];\r\n\tfunction _getReplaceParam(obj, strs) {\r\n\t  var pattern = tmplRule.replaceParam(),\r\n\t    matchArr, ret, i = 0;\r\n\t\r\n\t  while ((matchArr = pattern.exec(obj))) {\r\n\t    if (!ret) {\r\n\t      ret = [];\r\n\t    }\r\n\t\r\n\t    var prop = matchArr[3],\r\n\t      item = [matchArr[0], matchArr[1], null, false, true];\r\n\t\r\n\t    if (i > 0) {\r\n\t      item[4] = false;  //Sign not contain all of placehorder\r\n\t    }\r\n\t\r\n\t    //Clear parameter at both ends of the space.\r\n\t    prop = prop.trim();\r\n\t\r\n\t    //If parameter has quotation marks, this's a pure string parameter.\r\n\t    if (_quots.indexOf(prop[0]) > -1) {\r\n\t      prop = tools.clearQuot(prop);  //TODO 此处也会去除过滤器参数的引号\r\n\t      item[3] = true;\r\n\t    }\r\n\t\r\n\t    item[2] = prop;\r\n\t    ret.push(item);\r\n\t    i++;\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Get compiled parameter\r\n\tfunction compiledParam(value) {\r\n\t  var ret = tools.lightObj(),\r\n\t    strs = tools.isString(value) ? value.split(tmplRule.replaceSplit) : [value],\r\n\t    props = null,\r\n\t    isAll = false;  //此处指替换符是否占满整个属性值;若无替换符时为false\r\n\t\r\n\t  //If have placehorder\r\n\t  if (strs.length > 1) {\r\n\t    var params = _getReplaceParam(value, strs);\r\n\t    props = [];\r\n\t\r\n\t    tools.each(params, function (param) {\r\n\t      var retP = tools.lightObj();\r\n\t      isAll = param[4] ? param[0] === value : false;  //If there are several curly braces, \"isAll\" must be false.\r\n\t      retP.prop = compiledProp(param[2], param[3]);\r\n\t\r\n\t      //If parameter's open rules are several,then it need escape.\r\n\t      retP.escape = param[1].split(tmplRule.startRule).length < 3;\r\n\t      props.push(retP);\r\n\t    }, false, true);\r\n\t  }\r\n\t\r\n\t  ret.props = props;\r\n\t  ret.strs = strs;\r\n\t  ret.isAll = isAll;\r\n\t\r\n\t  //标记为模板函数替换变量\r\n\t  if (isAll) {\r\n\t    var prop = props[0].prop;\r\n\t    if (prop.name.indexOf('!#') === 0) {\r\n\t      prop.name = prop.name.substr(2);\r\n\t      ret.isTmplPlace = true;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  compiledParam: compiledParam,\r\n\t  compiledParams: compiledParams,\r\n\t  compiledProp: compiledProp\r\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3),\r\n\t  errorTitle = nj.errorTitle;\r\n\t\r\n\t//提取style内参数\r\n\tfunction styleProps(obj) {\r\n\t  //If the parameter is a style object,then direct return.\r\n\t  if (tools.isObject(obj)) {\r\n\t    return obj;\r\n\t  }\r\n\t\r\n\t  //参数为字符串\r\n\t  var pattern = /([^\\s:]+)[\\s]?:[\\s]?([^\\s;]+)[;]?/g,\r\n\t    matchArr, ret;\r\n\t\r\n\t  while ((matchArr = pattern.exec(obj))) {\r\n\t    var key = matchArr[1],\r\n\t      value = matchArr[2];\r\n\t\r\n\t    if (!ret) {\r\n\t      ret = {};\r\n\t    }\r\n\t\r\n\t    //Convert to lowercase when style name is all capital.\r\n\t    if (/^[A-Z-]+$/.test(key)) {\r\n\t      key = key.toLowerCase();\r\n\t    }\r\n\t\r\n\t    //将连字符转为驼峰命名\r\n\t    key = tools.toCamelCase(key);\r\n\t\r\n\t    ret[key] = value;\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Get value from multiple datas\r\n\tfunction getDatasValue(datas, prop) {\r\n\t  var ret, obj;\r\n\t  for (var i = 0, l = datas.length; i < l; i++) {\r\n\t    obj = datas[i];\r\n\t    if (obj) {\r\n\t      ret = obj[prop];\r\n\t      if (ret != null) {\r\n\t        return ret;\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t//Rebuild data in the new context\r\n\tfunction getNewData(item, data, isArr, addData) {\r\n\t  var ret = item;\r\n\t\r\n\t  if (isArr == null) {\r\n\t    isArr = tools.isArray(data);\r\n\t  }\r\n\t  if (isArr || addData) {\r\n\t    ret = tools.listPush([item], !addData ? data.slice(1) : (isArr ? data : [data]));\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Rebuild local variables in the new context\r\n\tfunction newContextVars(p1, p2, p3) {\r\n\t  var _parent = p2.parent,\r\n\t    hasItem = 'item' in p3,\r\n\t    parent = {\r\n\t      data: hasItem ? p3.item : _parent.data,\r\n\t      parent: p3.fallback ? _parent : _parent.parent,\r\n\t      index: 'index' in p3 ? p3.index : _parent.index\r\n\t    },\r\n\t    data = hasItem ? getNewData(p3.item, p2.data, p2.multiData, p3.addData) : p2.data,\r\n\t    multiData = p3.addData ? true : p2.multiData;\r\n\t\r\n\t  return {\r\n\t    parent: parent,\r\n\t    data: data,\r\n\t    multiData: multiData\r\n\t  }\r\n\t}\r\n\t\r\n\t//修正属性名\r\n\tfunction fixPropName(name) {\r\n\t  switch (name) {\r\n\t    case 'class':\r\n\t      name = 'className';\r\n\t      break;\r\n\t    case 'for':\r\n\t      name = 'htmlFor';\r\n\t      break;\r\n\t  }\r\n\t\r\n\t  return name;\r\n\t}\r\n\t\r\n\t//合并字符串属性\r\n\tfunction assignStringProp(paramsE, keys) {\r\n\t  var ret = '';\r\n\t  for (var k in paramsE) {\r\n\t    if (!keys || !keys[k]) {\r\n\t      var v = paramsE[k];\r\n\t      ret += ' ' + k + (k !== v ? '=\"' + v + '\"' : ' ');\r\n\t    }\r\n\t  }\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//创建块表达式子节点函数\r\n\tfunction exprRet(p1, p2, fn, p4) {\r\n\t  return function (param) {\r\n\t    return fn(p1, p2, param, p4);\r\n\t  };\r\n\t}\r\n\t\r\n\t//构建可运行的模板函数\r\n\tfunction tmplWrap(configs, main) {\r\n\t  return function () {\r\n\t    var args = arguments,\r\n\t      len = args.length,\r\n\t      data;\r\n\t\r\n\t    if (len <= 0) {\r\n\t      data = {};\r\n\t    }\r\n\t    else if (len === 1) {\r\n\t      data = args[0];\r\n\t    }\r\n\t    else {\r\n\t      data = [];\r\n\t      for (var i = 0; i < len; i++) {\r\n\t        data[data.length] = args[i];\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return main(configs, {\r\n\t      data: data,\r\n\t      parent: this && this._njParent ? this._njParent : null,\r\n\t      multiData: tools.isArray(data)\r\n\t    });\r\n\t  };\r\n\t}\r\n\t\r\n\t//创建模板函数\r\n\tfunction template(fns) {\r\n\t  var configs = {\r\n\t    useString: fns.useString,\r\n\t    exprs: nj.exprs,\r\n\t    filters: nj.filters,\r\n\t    getDatasValue: nj.getDatasValue,\r\n\t    noop: nj.noop,\r\n\t    lightObj: nj.lightObj,\r\n\t    throwIf: nj.throwIf,\r\n\t    warn: nj.warn,\r\n\t    getNewData: nj.getNewData,\r\n\t    newContextVars: nj.newContextVars,\r\n\t    styleProps: nj.styleProps,\r\n\t    exprRet: nj.exprRet\r\n\t  };\r\n\t\r\n\t  if (!configs.useString) {\r\n\t    configs.h = nj.createElement;\r\n\t    configs.components = nj.components;\r\n\t    //configs.assign = nj.assign;\r\n\t  }\r\n\t  else {\r\n\t    configs.assignStringProp = nj.assignStringProp;\r\n\t    configs.escape = nj.escape;\r\n\t  }\r\n\t\r\n\t  tools.each(fns, function (v, k) {\r\n\t    if (k.indexOf('main') === 0) {  //将每个主函数构建为可运行的模板函数\r\n\t      configs[k] = tmplWrap(configs, v);\r\n\t      configs['_' + k] = v;\r\n\t    }\r\n\t    else if (k.indexOf('fn') === 0) {  //块表达式函数\r\n\t      configs[k] = v;\r\n\t    }\r\n\t  }, false, false);\r\n\t\r\n\t  return configs;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  getNewData: getNewData,\r\n\t  newContextVars: newContextVars,\r\n\t  getDatasValue: getDatasValue,\r\n\t  fixPropName: fixPropName,\r\n\t  styleProps: styleProps,\r\n\t  assignStringProp: assignStringProp,\r\n\t  exprRet: exprRet,\r\n\t  tmplWrap: tmplWrap,\r\n\t  template: template\r\n\t};\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tvar ESCAPE_LOOKUP = {\r\n\t  '&': '&amp;',\r\n\t  '>': '&gt;',\r\n\t  '<': '&lt;',\r\n\t  '\"': '&quot;',\r\n\t  '\\'': '&#x27;'\r\n\t};\r\n\t\r\n\tfunction escape(text) {\r\n\t  if (text == null) {\r\n\t    return '';\r\n\t  }\r\n\t  else if(!text.replace) {\r\n\t    return text;\r\n\t  }\r\n\t\r\n\t  return text.replace(/[&><\"']/g, function (match) {\r\n\t    return ESCAPE_LOOKUP[match];\r\n\t  });\r\n\t}\r\n\t\r\n\tmodule.exports = escape;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3),\r\n\t  tranParam = __webpack_require__(6),\r\n\t  tranElem = __webpack_require__(5),\r\n\t  tmplRule = nj.tmplRule;\r\n\t\r\n\t//检测元素节点\r\n\tfunction checkElem(obj, parent) {\r\n\t  var node = {},\r\n\t    parentContent = !parent.hasElse ? 'content' : 'contentElse';\r\n\t\r\n\t  if (!tools.isArray(obj)) {  //判断是否为文本节点\r\n\t    if (tools.isObject(obj) && '_njShim' in obj && !tools.isArray(obj._njShim)) {  //Get the shim value\r\n\t      obj = obj._njShim;\r\n\t    }\r\n\t\r\n\t    node.type = 'nj_plaintext';\r\n\t    node.content = [tranParam.compiledParam(obj)];\r\n\t    parent[parentContent].push(node);\r\n\t    return;\r\n\t  }\r\n\t\r\n\t  var first = obj[0];\r\n\t  if (tools.isString(first)) {  //第一个子节点为字符串\r\n\t    var first = first,\r\n\t      len = obj.length,\r\n\t      last = obj[len - 1],\r\n\t      isElemNode = false,\r\n\t      expr,\r\n\t      exprParams;\r\n\t\r\n\t    //判断是否为xml标签\r\n\t    var openTagName,\r\n\t      hasCloseTag = false,\r\n\t      isTmpl, isParamsExpr;\r\n\t    \r\n\t    expr = tranElem.isExpr(first);\r\n\t    if (!expr) {\r\n\t      var xmlOpenTag = tranElem.getXmlOpenTag(first);\r\n\t      if (xmlOpenTag) {  //tagname为xml标签时,则认为是元素节点\r\n\t        openTagName = xmlOpenTag[1];\r\n\t        \r\n\t        if (!tranElem.isXmlSelfCloseTag(first)) {  //非自闭合标签才验证是否存在关闭标签\r\n\t          hasCloseTag = tranElem.isXmlCloseTag(last, openTagName);\r\n\t        }\r\n\t        else {  //自闭合标签\r\n\t          node.selfCloseTag = true;\r\n\t        }\r\n\t        isElemNode = true;\r\n\t      }\r\n\t    }\r\n\t    else {  //为块表达式,也可视为一个元素节点\r\n\t      var exprName = expr[0].toLowerCase();\r\n\t      exprParams = expr[1];\r\n\t      isTmpl = tranElem.isTmpl(exprName);\r\n\t      isParamsExpr = tranElem.isParamsExpr(exprName);\r\n\t\r\n\t      node.type = 'nj_expr';\r\n\t      node.expr = exprName;\r\n\t      if (exprParams != null && !isTmpl) {\r\n\t        node.refer = tranParam.compiledParam(exprParams);\r\n\t      }\r\n\t\r\n\t      if (tranElem.isExprCloseTag(last, exprName)) {  //判断是否有块表达式闭合标签\r\n\t        hasCloseTag = true;\r\n\t      }\r\n\t      isElemNode = true;\r\n\t    }\r\n\t\r\n\t    if (isElemNode) {  //判断是否为元素节点\r\n\t      var elseIndex = -1,\r\n\t        pushContent = true;\r\n\t\r\n\t      if (!expr) {\r\n\t        node.type = openTagName;\r\n\t\r\n\t        //If open tag has a brace,add the typeRefer param.\r\n\t        var typeRefer = tranElem.getInsideBraceParam(openTagName);\r\n\t        if (typeRefer) {\r\n\t          node.typeRefer = tranParam.compiledParam(typeRefer[0]);\r\n\t        }\r\n\t\r\n\t        //获取openTag内参数\r\n\t        var tagParams = tranElem.getOpenTagParams(first);\r\n\t        if (tagParams) {\r\n\t          if (!node.params) {\r\n\t            node.params = tools.lightObj();\r\n\t          }\r\n\t\r\n\t          tools.each(tagParams, function (param) {\r\n\t            node.params[param.key] = tranParam.compiledParam(param.value);\r\n\t          }, false, true);\r\n\t        }\r\n\t\r\n\t        //Verify if self closing tag again, because the tag may be similar to \"<br></br>\".\r\n\t        if (!node.selfCloseTag) {\r\n\t          node.selfCloseTag = tranElem.verifySelfCloseTag(openTagName);\r\n\t        }\r\n\t      }\r\n\t      else {  //为块表达式时判断是否有$else\r\n\t        if (isTmpl) {  //模板元素\r\n\t          pushContent = false;\r\n\t          var retR = tranElem.getInsideBraceParam(exprParams);\r\n\t\r\n\t          //将模板添加到父节点的params中\r\n\t          tranElem.addTmpl(node, parent, retR ? tools.clearQuot(retR[1]) : null);\r\n\t        }\r\n\t        else if (isParamsExpr) {\r\n\t          pushContent = false;\r\n\t        }\r\n\t        else {\r\n\t          elseIndex = obj.indexOf(tmplRule.exprRule + 'else');\r\n\t        }\r\n\t      }\r\n\t\r\n\t      //放入父节点content内\r\n\t      if (pushContent) {\r\n\t        parent[parentContent].push(node);\r\n\t      }\r\n\t\r\n\t      //取出子节点集合\r\n\t      var end = len - (hasCloseTag ? 1 : 0),\r\n\t        content = obj.slice(1, (elseIndex < 0 ? end : elseIndex));\r\n\t      if (content && content.length) {\r\n\t        checkContentElem(content, node);\r\n\t      }\r\n\t\r\n\t      //如果有$else,则将$else后面的部分存入content_else集合中\r\n\t      if (elseIndex >= 0) {\r\n\t        var contentElse = obj.slice(elseIndex + 1, end);\r\n\t        node.hasElse = true;\r\n\t\r\n\t        if (contentElse && contentElse.length) {\r\n\t          checkContentElem(contentElse, node);\r\n\t        }\r\n\t      }\r\n\t\r\n\t      //If this is params block, set on the \"paramsExpr\" property of the parent node.\r\n\t      if (isParamsExpr) {\r\n\t        tranElem.addParamsExpr(node, parent);\r\n\t      }\r\n\t    }\r\n\t    else {  //如果不是元素节点,则为节点集合\r\n\t      checkContentElem(obj, parent);\r\n\t    }\r\n\t  }\r\n\t  else if (tools.isArray(first)) {  //如果第一个子节点为数组,则该节点一定为节点集合(可以是多层数组嵌套的集合)\r\n\t    checkContentElem(obj, parent);\r\n\t  }\r\n\t}\r\n\t\r\n\t//检测子元素节点\r\n\tfunction checkContentElem(obj, parent) {\r\n\t  if (!parent.content) {\r\n\t    parent.content = [];\r\n\t  }\r\n\t  if (parent.hasElse && !parent.contentElse) {\r\n\t    parent.contentElse = [];\r\n\t  }\r\n\t\r\n\t  tools.each(obj, function (item) {\r\n\t    checkElem(item, parent);\r\n\t  }, false, true);\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  checkElem: checkElem\r\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3);\r\n\t\r\n\t//注册组件\r\n\tfunction registerComponent(name, component) {\r\n\t  var params = name;\r\n\t  if (!tools.isObject(name)) {\r\n\t    params = {};\r\n\t    params[name] = component;\r\n\t  }\r\n\t\r\n\t  tools.each(params, function (v, k) {\r\n\t    nj.components[k.toLowerCase()] = v;\r\n\t  }, false, false);\r\n\t\r\n\t  return component;\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  registerComponent: registerComponent\r\n\t};\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar tools = __webpack_require__(3);\r\n\t\r\n\t//Global filter list\r\n\tvar filters = {\r\n\t  //Get param properties\r\n\t  prop: function (obj, props) {\r\n\t    var ret = obj;\r\n\t    ret && tools.each(props.split('.'), function (p) {\r\n\t      ret = ret[p];\r\n\t    }, false, true);\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  //Get list count\r\n\t  count: function (obj) {\r\n\t    return obj ? obj.length : 0;\r\n\t  },\r\n\t\r\n\t  //Get list item\r\n\t  item: function (obj, no) {\r\n\t    return obj ? obj[no] : null;\r\n\t  },\r\n\t\r\n\t  //Judge equal\r\n\t  equal: function (obj, val) {\r\n\t    return obj == val;\r\n\t  },\r\n\t\r\n\t  //Less than\r\n\t  lt: function (val1, val2, noEqual) {\r\n\t    var ret;\r\n\t    val1 = parseFloat(val1);\r\n\t    val2 = parseFloat(val2);\r\n\t\r\n\t    if (noEqual) {\r\n\t      ret = val1 < val2;\r\n\t    }\r\n\t    else {\r\n\t      ret = val1 <= val2;\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  //Greater than\r\n\t  gt: function (val1, val2, noEqual) {\r\n\t    var ret;\r\n\t    val1 = parseFloat(val1);\r\n\t    val2 = parseFloat(val2);\r\n\t\r\n\t    if (noEqual) {\r\n\t      ret = val1 > val2;\r\n\t    }\r\n\t    else {\r\n\t      ret = val1 >= val2;\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  //Addition\r\n\t  add: function (val1, val2, isFloat) {\r\n\t    return val1 + (isFloat ? parseFloat(val2) : parseInt(val2, 10));\r\n\t  },\r\n\t\r\n\t  //Convert to int \r\n\t  int: function (val) {\r\n\t    return parseInt(val, 10);\r\n\t  },\r\n\t\r\n\t  //Convert to float \r\n\t  float: function (val) {\r\n\t    return parseFloat(val);\r\n\t  },\r\n\t\r\n\t  //Convert to boolean \r\n\t  bool: function (val) {\r\n\t    if (val === 'false') {\r\n\t      return false;\r\n\t    }\r\n\t\r\n\t    return Boolean(val);\r\n\t  }\r\n\t};\r\n\t\r\n\tfunction _commonConfig(params) {\r\n\t  var ret = {\r\n\t    data: true,\r\n\t    parent: true,\r\n\t    index: true,\r\n\t    useString: true\r\n\t  };\r\n\t\r\n\t  if (params) {\r\n\t    ret = tools.assign(ret, params);\r\n\t  }\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Filter default config\r\n\tvar _defaultConfig = { data: false, parent: false, index: false },\r\n\t  filterConfig = {\r\n\t    prop: _commonConfig(_defaultConfig),\r\n\t    count: _commonConfig(_defaultConfig),\r\n\t    item: _commonConfig(_defaultConfig),\r\n\t    equal: _commonConfig(_defaultConfig),\r\n\t    lt: _commonConfig(_defaultConfig),\r\n\t    gt: _commonConfig(_defaultConfig),\r\n\t    add: _commonConfig(_defaultConfig),\r\n\t    int: _commonConfig(_defaultConfig),\r\n\t    float: _commonConfig(_defaultConfig),\r\n\t    bool: _commonConfig(_defaultConfig)\r\n\t  };\r\n\t\r\n\t//Register filter and also can batch add\r\n\tfunction registerFilter(name, filter, options) {\r\n\t  var params = name;\r\n\t  if (!tools.isObject(name)) {\r\n\t    params = {};\r\n\t    params[name] = {\r\n\t      filter: filter,\r\n\t      options: options\r\n\t    };\r\n\t  }\r\n\t\r\n\t  tools.each(params, function (v, k) {\r\n\t    var name = k.toLowerCase();\r\n\t    if (v) {\r\n\t      var filter = v.filter,\r\n\t        options = v.options;\r\n\t\r\n\t      if (filter || options) {\r\n\t        if (filter) {\r\n\t          filters[name] = filter;\r\n\t        }\r\n\t        if (options) {\r\n\t          filterConfig[name] = _commonConfig(options);\r\n\t        }\r\n\t      }\r\n\t      else {\r\n\t        filters[name] = v;\r\n\t      }\r\n\t    }\r\n\t  }, false, false);\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  filters: filters,\r\n\t  filterConfig: filterConfig,\r\n\t  registerFilter: registerFilter\r\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar tools = __webpack_require__(3);\r\n\t\r\n\t//Global expression list\r\n\tvar exprs = {\r\n\t  'if': function (refer, useUnless) {\r\n\t    if (refer === 'false') {\r\n\t      refer = false;\r\n\t    }\r\n\t\r\n\t    var referR, ret;\r\n\t    if (!useUnless) {\r\n\t      referR = !!refer;\r\n\t    }\r\n\t    else {\r\n\t      referR = !!!refer;\r\n\t    }\r\n\t    if (referR) {\r\n\t      ret = this.result();\r\n\t    }\r\n\t    else {\r\n\t      ret = this.inverse();\r\n\t    }\r\n\t\r\n\t    if (this.useString && ret == null) {\r\n\t      return '';\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  unless: function (refer) {\r\n\t    return exprs['if'].call(this, refer, true);\r\n\t  },\r\n\t\r\n\t  each: function (refer) {\r\n\t    var thiz = this,\r\n\t      useString = thiz.useString,\r\n\t      ret;\r\n\t\r\n\t    if (refer) {\r\n\t      if (useString) {\r\n\t        ret = '';\r\n\t      }\r\n\t      else {\r\n\t        ret = [];\r\n\t      }\r\n\t\r\n\t      tools.each(refer, function (item, index) {\r\n\t        var retI = thiz.result({\r\n\t          item: item,\r\n\t          index: index,\r\n\t          fallback: true\r\n\t        });\r\n\t\r\n\t        if (useString) {\r\n\t          ret += retI;\r\n\t        }\r\n\t        else {\r\n\t          ret.push(retI);\r\n\t        }\r\n\t      }, false, tools.isArrayLike(refer));\r\n\t\r\n\t      //Return null when not use string and result is empty.\r\n\t      if (!useString && !ret.length) {\r\n\t        ret = null;\r\n\t      }\r\n\t    }\r\n\t    else {\r\n\t      ret = thiz.inverse();\r\n\t      if (useString && ret == null) {\r\n\t        ret = '';\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  //Parameter\r\n\t  param: function () {\r\n\t    var ret = this.result(),  //Get parameter value\r\n\t      name = '',\r\n\t      value;\r\n\t\r\n\t    //Make property name by multiple parameters\r\n\t    tools.each(arguments, function (item, i) {\r\n\t      name += item;\r\n\t    }, false, true);\r\n\t\r\n\t    //If the value length greater than 1, it need to be connected to a whole string.\r\n\t    if (ret != null) {\r\n\t      if (!tools.isArray(ret)) {\r\n\t        value = ret;\r\n\t      }\r\n\t      else {\r\n\t        value = '';\r\n\t        tools.each(tools.flatten(ret), function (item) {\r\n\t          value += item != null ? item : '';\r\n\t        }, false, true);\r\n\t      }\r\n\t    }\r\n\t    else {  //Match to Similar to \"checked\" or \"disabled\" attribute.\r\n\t      value = !this.useString ? true : name;\r\n\t    }\r\n\t\r\n\t    this.paramsExpr[name] = value;\r\n\t  },\r\n\t\r\n\t  //Spread parameters\r\n\t  spreadparam: function (refer) {\r\n\t    if (!refer) {\r\n\t      return;\r\n\t    }\r\n\t\r\n\t    var thiz = this;\r\n\t    tools.each(refer, function (v, k) {\r\n\t      thiz.paramsExpr[k] = v;\r\n\t    }, false, false);\r\n\t  },\r\n\t\r\n\t  equal: function (value1, value2) {\r\n\t    var ret;\r\n\t    if (value1 == value2) {\r\n\t      ret = this.result();\r\n\t    }\r\n\t    else {\r\n\t      ret = this.inverse();\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  'for': function (start, end) {\r\n\t    var ret, useString = this.useString;\r\n\t    if (useString) {\r\n\t      ret = '';\r\n\t    }\r\n\t    else {\r\n\t      ret = [];\r\n\t    }\r\n\t\r\n\t    if (end == null) {\r\n\t      end = start;\r\n\t      start = 0;\r\n\t    }\r\n\t    start = parseInt(start, 10);\r\n\t    end = parseInt(end, 10);\r\n\t\r\n\t    for (; start <= end; start++) {\r\n\t      var retI = this.result({\r\n\t        index: start\r\n\t      });\r\n\t\r\n\t      if (useString) {\r\n\t        ret += retI;\r\n\t      }\r\n\t      else {\r\n\t        ret.push(retI);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    return ret;\r\n\t  },\r\n\t\r\n\t  blank: function () {\r\n\t    return this.result();\r\n\t  }\r\n\t};\r\n\t\r\n\tfunction _commonConfig(params) {\r\n\t  var ret = {\r\n\t    data: true,\r\n\t    parent: true,\r\n\t    index: true,\r\n\t    useString: true,\r\n\t    paramsExpr: false,\r\n\t    result: true,\r\n\t    inverse: true,\r\n\t    newContext: false\r\n\t  };\r\n\t\r\n\t  if (params) {\r\n\t    ret = tools.assign(ret, params);\r\n\t  }\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Expression default config\r\n\tvar _defaultConfig = { data: false, parent: false, index: false },\r\n\t  exprConfig = {\r\n\t    'if': _commonConfig(_defaultConfig),\r\n\t    unless: _commonConfig(_defaultConfig),\r\n\t    each: _commonConfig(tools.assign({ newContext: true }, _defaultConfig)),\r\n\t    param: _commonConfig(tools.assign({ inverse: false, paramsExpr: true }, _defaultConfig)),\r\n\t    spreadparam: _commonConfig(tools.assign({ useString: false, result: false, inverse: false, paramsExpr: true }, _defaultConfig)),\r\n\t    equal: _commonConfig(tools.assign({ useString: false }, _defaultConfig)),\r\n\t    'for': _commonConfig(tools.assign({ newContext: true }, _defaultConfig, { data: true })),\r\n\t    blank: _commonConfig(tools.assign({ useString: false, inverse: false }, _defaultConfig))\r\n\t  };\r\n\t\r\n\t//Expression alias\r\n\texprs.prop = exprs.p = exprs.param;\r\n\texprConfig.prop = exprConfig.p = exprConfig.param;\r\n\texprs.spread = exprs.spreadparam;\r\n\texprConfig.spread = exprConfig.spreadparam;\r\n\t\r\n\t//Register expression and also can batch add\r\n\tfunction registerExpr(name, expr, options) {\r\n\t  var params = name;\r\n\t  if (!tools.isObject(name)) {\r\n\t    params = {};\r\n\t    params[name] = {\r\n\t      expr: expr,\r\n\t      options: options\r\n\t    };\r\n\t  }\r\n\t\r\n\t  tools.each(params, function (v, k) {\r\n\t    var name = k.toLowerCase();\r\n\t    if (v) {\r\n\t      var expr = v.expr,\r\n\t        options = v.options;\r\n\t\r\n\t      if (expr || options) {\r\n\t        if(expr) {\r\n\t          exprs[name] = expr;\r\n\t        }\r\n\t        if(options) {\r\n\t          exprConfig[name] = _commonConfig(options);\r\n\t        }\r\n\t      }\r\n\t      else {\r\n\t        exprs[name] = v;\r\n\t      }\r\n\t    }\r\n\t  }, false, false);\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  exprs: exprs,\r\n\t  exprConfig: exprConfig,\r\n\t  registerExpr: registerExpr\r\n\t};\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3);\r\n\t\r\n\tfunction _createRegExp(reg, mode) {\r\n\t  return new RegExp(reg, mode);\r\n\t}\r\n\t\r\n\t//Clear the repeated characters\r\n\tfunction _clearRepeat(str) {\r\n\t  var ret = '',\r\n\t    i = 0,\r\n\t    l = str.length,\r\n\t    char;\r\n\t\r\n\t  for (; i < l; i++) {\r\n\t    char = str[i];\r\n\t    if (ret.indexOf(char) < 0) {\r\n\t      ret += char;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\tmodule.exports = function (startRule, endRule, exprRule, externalRule, propRule, templateRule) {\r\n\t  if(tools.isObject(startRule)){\r\n\t    var params = startRule;\r\n\t    startRule = params.start;\r\n\t    endRule = params.end;\r\n\t    exprRule = params.expr;\r\n\t    externalRule = params.external;\r\n\t    propRule = params.prop;\r\n\t    templateRule = params.template;\r\n\t  }\r\n\t  if (!startRule) {\r\n\t    startRule = '{';\r\n\t  }\r\n\t  if (!endRule) {\r\n\t    endRule = '}';\r\n\t  }\r\n\t  if (!exprRule) {\r\n\t    exprRule = '#';\r\n\t  }\r\n\t  if (!externalRule) {\r\n\t    externalRule = '$';\r\n\t  }\r\n\t  if (!propRule) {\r\n\t    propRule = '@';\r\n\t  }\r\n\t  if (!templateRule) {\r\n\t    templateRule = 'template';\r\n\t  }\r\n\t\r\n\t  var allRules = _clearRepeat(startRule + endRule),\r\n\t    firstChar = startRule[0],\r\n\t    otherChars = allRules.substr(1),\r\n\t    spChars = '#$@',\r\n\t    exprRules = _clearRepeat(exprRule + spChars),\r\n\t    escapeExprRule = exprRule.replace(/\\$/g, '\\\\$'),\r\n\t    escapeExternalRule = externalRule.replace(/\\$/g, '\\\\$');\r\n\t\r\n\t  //Reset the regexs to global list\r\n\t  tools.assign(nj.tmplRule, {\r\n\t    startRule: startRule,\r\n\t    endRule: endRule,\r\n\t    exprRule: exprRule,\r\n\t    externalRule: externalRule,\r\n\t    propRule: propRule,\r\n\t    xmlOpenTag: _createRegExp('^<([a-z' + firstChar + exprRules + '][-a-z0-9_|./' + otherChars + ']*)[^>]*>$', 'i'),\r\n\t    insideBraceParam: _createRegExp(startRule + '([^' + allRules + ']+)' + endRule, 'i'),\r\n\t    exprBraceParam: _createRegExp('([\\\\s]+(' + startRule + '){1,2}[^' + allRules + ']+(' + endRule + '){1,2})+', 'i'),\r\n\t    replaceBraceParam: function() {\r\n\t      return _createRegExp('[\\\\s]+(' + startRule + '){1,2}([^' + allRules + ']+)(' + endRule + '){1,2}', 'g')\r\n\t    },\r\n\t    replaceSplit: _createRegExp('(?:' + startRule + '){1,2}[^' + allRules + ']+(?:' + endRule + '){1,2}'),\r\n\t    replaceParam: function() {\r\n\t      return _createRegExp('((' + startRule + '){1,2})([^' + allRules + ']+)(' + endRule + '){1,2}', 'g');\r\n\t    },\r\n\t    checkElem: function() {\r\n\t      return _createRegExp('([^>]*)(<([a-z' + firstChar + '/' + exprRules + '!][-a-z0-9_|.' + allRules + exprRules + ']*)[^>]*>)([^<]*)', 'ig');\r\n\t    },\r\n\t    externalSplit: _createRegExp(escapeExternalRule + '\\\\{[^{}]*(?:\\\\{[^' + externalRule + ']*\\\\})*[^{}]*\\\\}'),\r\n\t    external: function() {\r\n\t      return _createRegExp(escapeExternalRule + '\\\\{([^{}]*(\\\\{[^' + externalRule + ']*\\\\})*[^{}]*)\\\\}', 'g');\r\n\t    },\r\n\t    expr: _createRegExp('^' + escapeExprRule + '([^\\\\s]+)', 'i'),\r\n\t    include: function() {\r\n\t      return _createRegExp('<' + escapeExprRule + 'include([^>]*)>', 'ig');\r\n\t    },\r\n\t    template: templateRule\r\n\t  });\r\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  utils = __webpack_require__(2),\r\n\t  buildRuntime = __webpack_require__(15),\r\n\t  compileStringTmpl = __webpack_require__(17);\r\n\t\r\n\t//编译模板并返回转换函数\r\n\tfunction compile(tmpl, tmplName, outputH, fileName) {\r\n\t  if (!tmpl) {\r\n\t    return;\r\n\t  }\r\n\t  if (utils.isObject(tmplName)) {\r\n\t    var params = tmplName;\r\n\t    tmplName = params.tmplName;\r\n\t    outputH = params.outputH;\r\n\t    fileName = params.fileName;\r\n\t  }\r\n\t\r\n\t  //编译模板函数\r\n\t  var tmplFns;\r\n\t  if (tmplName) {\r\n\t    tmplFns = nj.templates[tmplName];\r\n\t  }\r\n\t  if (!tmplFns) {\r\n\t    var isObj = utils.isObject(tmpl), fns;\r\n\t    if (isObj && tmpl.main) {  //直接传入预编译模板\r\n\t      fns = tmpl;\r\n\t    }\r\n\t    else {  //编译AST\r\n\t      var root;\r\n\t      if (tmplName) {\r\n\t        root = nj.asts[tmplName];\r\n\t      }\r\n\t      if (!root) {\r\n\t        //Can be directly introduced into the AST\r\n\t        if (isObj && tmpl.type === 'nj_root') {\r\n\t          root = tmpl;\r\n\t        }\r\n\t        else {\r\n\t          root = _createAstRoot();\r\n\t\r\n\t          //Auto transform string template to array\r\n\t          if (utils.isString(tmpl)) {\r\n\t            //Merge all include blocks\r\n\t            var includeParser = nj.includeParser;\r\n\t            if (includeParser) {\r\n\t              tmpl = includeParser(tmpl, fileName);\r\n\t            }\r\n\t\r\n\t            tmpl = compileStringTmpl(tmpl);\r\n\t          }\r\n\t\r\n\t          //分析传入参数并转换为节点树对象\r\n\t          utils.checkElem(tmpl, root);\r\n\t        }\r\n\t\r\n\t        //保存模板AST编译结果到全局集合中\r\n\t        if (tmplName) {\r\n\t          nj.asts[tmplName] = root;\r\n\t        }\r\n\t      }\r\n\t\r\n\t      fns = buildRuntime(root.content, !outputH);\r\n\t    }\r\n\t\r\n\t    tmplFns = utils.template(fns);\r\n\t\r\n\t    //保存模板函数编译结果到全局集合中\r\n\t    if (tmplName) {\r\n\t      nj.templates[tmplName] = tmplFns;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return tmplFns.main;\r\n\t}\r\n\t\r\n\t//Create template root object\r\n\tfunction _createAstRoot() {\r\n\t  var root = utils.lightObj();\r\n\t  root.type = 'nj_root';\r\n\t  root.content = [];\r\n\t\r\n\t  return root;\r\n\t}\r\n\t\r\n\t//编译字面量并返回组件转换函数\r\n\tfunction compileH(tmpl, tmplName) {\r\n\t  return compile(tmpl, tmplName, true);\r\n\t}\r\n\t\r\n\t//Precompile template\r\n\tfunction precompile(tmpl, outputH) {\r\n\t  var root = _createAstRoot();\r\n\t\r\n\t  if (utils.isString(tmpl)) {\r\n\t    tmpl = compileStringTmpl(tmpl);\r\n\t  }\r\n\t  utils.checkElem(tmpl, root);\r\n\t\r\n\t  return buildRuntime(root.content, !outputH);\r\n\t}\r\n\t\r\n\tmodule.exports = {\r\n\t  compile: compile,\r\n\t  compileH: compileH,\r\n\t  precompile: precompile\r\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  utils = __webpack_require__(2),\r\n\t  errorTitle = nj.errorTitle,\r\n\t  exprConfig = utils.exprConfig,\r\n\t  filterConfig = utils.filterConfig,\r\n\t  replaceSpecialSymbol = __webpack_require__(16);\r\n\t\r\n\tfunction _buildFn(content, fns, no, newContext, level) {\r\n\t  var fnStr = '',\r\n\t    useString = fns.useString,\r\n\t    isTmplExpr = utils.isString(no),  //如果no为字符串, 则本次将构建tmpl块模板函数\r\n\t    main = isTmplExpr || no === 0,\r\n\t    /* retType\r\n\t     1: 只有单个子节点\r\n\t     2: 有多个子节点\r\n\t     object: 非构建函数时\r\n\t    */\r\n\t    retType = content.length === 1 ? '1' : '2',\r\n\t    counter = {\r\n\t      _type: 0,\r\n\t      _typeRefer: 0,\r\n\t      _params: 0,\r\n\t      _paramsE: 0,\r\n\t      _compParam: 0,\r\n\t      _dataRefer: 0,\r\n\t      _expr: 0,\r\n\t      _this: 0,\r\n\t      _value: 0,\r\n\t      _filter: 0,\r\n\t      _thisF: 0,\r\n\t      newContext: newContext\r\n\t    };\r\n\t\r\n\t  if (!useString) {\r\n\t    counter._compParam = 0;\r\n\t  }\r\n\t  else {\r\n\t    counter._children = 0;\r\n\t  }\r\n\t\r\n\t  if (main) {\r\n\t    fnStr += _buildVar();\r\n\t    fnStr += 'if(!parent) {\\n';\r\n\t    fnStr += '  if (data) parent = { data: multiData ? data[0] : data };\\n';\r\n\t    fnStr += '  else parent = {};\\n';\r\n\t    fnStr += '  p2.parent = parent;\\n';\r\n\t    fnStr += '};\\n';\r\n\t  }\r\n\t  else if (newContext) {\r\n\t    fnStr += 'var _p2 = p1.newContextVars(p1, p2, p3),\\n';\r\n\t    fnStr += '  parent = _p2.parent,\\n';\r\n\t    fnStr += '  data = _p2.data,\\n';\r\n\t    fnStr += '  multiData = _p2.multiData;\\n';\r\n\t  }\r\n\t  else {\r\n\t    fnStr += _buildVar();\r\n\t  }\r\n\t\r\n\t  if (retType === '2') {\r\n\t    if (!useString) {\r\n\t      fnStr += 'var ret = [];\\n';\r\n\t    }\r\n\t    else {\r\n\t      fnStr += 'var ret = \\'\\';\\n';\r\n\t    }\r\n\t  }\r\n\t\r\n\t  fnStr += _buildContent(content, fns, counter, retType, level);\r\n\t\r\n\t  if (retType === '2') {\r\n\t    fnStr += 'return ret;';\r\n\t  }\r\n\t\r\n\t  /* 构建块表达式函数\r\n\t   p1: 全局模板数据\r\n\t   p2: 当前模板数据\r\n\t   p3: 块表达式内调用result及inverse方法传递的参数\r\n\t   p4: #props块变量\r\n\t  */\r\n\t  fns[main ? 'main' + (isTmplExpr ? no : '') : 'fn' + no] = new Function('p1', 'p2', 'p3', 'p4', fnStr);\r\n\t  return no;\r\n\t}\r\n\t\r\n\tfunction _buildVar() {\r\n\t  return ('var parent = p2.parent,\\n'\r\n\t    + '  data = p2.data,\\n'\r\n\t    + '  multiData = p2.multiData;\\n');\r\n\t}\r\n\t\r\n\tfunction _buildPropData(obj, counter, fns, noEscape) {\r\n\t  var dataValueStr,\r\n\t    useString = fns.useString,\r\n\t    escape = !noEscape ? obj.escape : false;\r\n\t\r\n\t  //先生成数据值\r\n\t  if (!obj.prop.isStr) {\r\n\t    var name = obj.prop.name,\r\n\t      parentNum = obj.prop.parentNum,\r\n\t      data = '',\r\n\t      special = false;\r\n\t\r\n\t    if (name === '#') {\r\n\t      data = 'parent.index';\r\n\t      special = true;\r\n\t    }\r\n\t    else if (name === '.') {\r\n\t      data = 'parent.data';\r\n\t      special = true;\r\n\t    }\r\n\t\r\n\t    if (parentNum) {\r\n\t      if (!data) {\r\n\t        data = 'parent.data';\r\n\t      }\r\n\t      for (var i = 0; i < parentNum; i++) {\r\n\t        data = 'parent.' + data;\r\n\t      }\r\n\t\r\n\t      if (!special) {\r\n\t        data += '[\\'' + name + '\\']';\r\n\t        special = true;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    if (!special) {\r\n\t      dataValueStr = '(!multiData ? data[\\'' + name + '\\'] : p1.getDatasValue(data, \\'' + name + '\\'))';\r\n\t    }\r\n\t    else {\r\n\t      dataValueStr = data;\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    dataValueStr = '\\'' + obj.prop.name + '\\'';\r\n\t  }\r\n\t\r\n\t  //有过滤器时需要生成\"_value\"值\r\n\t  var filters = obj.prop.filters;\r\n\t  if (filters) {\r\n\t    var valueStr = '_value' + counter._value++,\r\n\t      filterStr = 'var ' + valueStr + ' = ' + dataValueStr + ';\\n';\r\n\t\r\n\t    utils.each(filters, function (o) {\r\n\t      var _filterC = counter._filter++,\r\n\t        _thisFC = counter._thisF++,\r\n\t        configF = filterConfig[o.name],\r\n\t        noConfig = !configF;\r\n\t\r\n\t      filterStr += '\\nvar _filter' + _filterC + ' = p1.filters[\\'' + o.name + '\\'];\\n';\r\n\t      filterStr += 'if (!_filter' + _filterC + ') {\\n';\r\n\t      filterStr += '  p1.warn(\\'' + o.name + '\\', \\'filter\\');\\n';\r\n\t      filterStr += '}\\n';\r\n\t      filterStr += 'else {\\n';\r\n\t      filterStr += '  var _thisF' + _thisFC + ' = p1.lightObj();\\n';\r\n\t      if (noConfig || configF.useString) {\r\n\t        filterStr += '  _thisF' + _thisFC + '.useString = p1.useString;\\n';\r\n\t      }\r\n\t      if (noConfig || configF.data) {\r\n\t        filterStr += '  _thisF' + _thisFC + '.data = parent.data;\\n';\r\n\t      }\r\n\t      if (noConfig || configF.parent) {\r\n\t        filterStr += '  _thisF' + _thisFC + '.parent = parent.parent;\\n';\r\n\t      }\r\n\t      if (noConfig || configF.index) {\r\n\t        filterStr += '  _thisF' + _thisFC + '.index = parent.index;\\n';\r\n\t      }\r\n\t      filterStr += '\\n  ' + valueStr + ' = _filter' + _filterC + '.apply(_thisF' + _thisFC + ', [' + valueStr\r\n\t        + (o.params ? o.params.reduce(function (p, c) {\r\n\t          return p + ', \\'' + c + '\\'';\r\n\t        }, '') : '')\r\n\t        + ']);\\n';\r\n\t      filterStr += '}\\n';\r\n\t    }, false, true);\r\n\t\r\n\t    return {\r\n\t      valueStr: _buildEscape(valueStr, useString, escape),\r\n\t      filterStr: filterStr\r\n\t    };\r\n\t  }\r\n\t  else {\r\n\t    return _buildEscape(dataValueStr, useString, escape);\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction _buildEscape(valueStr, useString, escape) {\r\n\t  if (useString && escape) {\r\n\t    return 'p1.escape(' + valueStr + ')';\r\n\t  }\r\n\t  else {\r\n\t    return valueStr;\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction _buildProps(obj, counter, fns) {\r\n\t  var str0 = obj.strs[0],\r\n\t    valueStr = '',\r\n\t    filterStr = '';\r\n\t\r\n\t  if (utils.isString(str0)) {  //常规属性\r\n\t    valueStr = !obj.isAll && str0 !== '' ? ('\\'' + str0 + '\\'') : '';\r\n\t    filterStr = '';\r\n\t\r\n\t    utils.each(obj.props, function (o, i) {\r\n\t      var propData = _buildPropData(o, counter, fns),\r\n\t        dataValueStr;\r\n\t      if (utils.isString(propData)) {\r\n\t        dataValueStr = propData;\r\n\t      }\r\n\t      else {\r\n\t        dataValueStr = propData.valueStr;\r\n\t        filterStr += propData.filterStr;\r\n\t      }\r\n\t\r\n\t      if (!obj.isAll) {\r\n\t        var strI = obj.strs[i + 1];\r\n\t        dataValueStr = (str0 === '' && i == 0 ? '' : ' + ')\r\n\t          + '(' + dataValueStr + ')'\r\n\t          + (strI !== '' ? ' + \\'' + strI + '\\'' : '');\r\n\t      }\r\n\t      else if (obj.isTmplPlace) {  //执行tmpl块模板函数\r\n\t        dataValueStr += '.call({ _njParent: parent }, data)';\r\n\t      }\r\n\t\r\n\t      valueStr += dataValueStr;\r\n\t      if (obj.isAll) {\r\n\t        return false;\r\n\t      }\r\n\t    }, false, true);\r\n\t  }\r\n\t  else if (utils.isObject(str0) && str0.length != null) {  //tmpl块表达式\r\n\t    valueStr += '{\\n';\r\n\t    utils.each(str0, function (v, k, i, l) {\r\n\t      if (k !== 'length') {\r\n\t        valueStr += '  \"' + k + '\": p1.main' + _buildFn(v.content, fns, 'T' + ++fns._noT);\r\n\t      }\r\n\t      else {\r\n\t        valueStr += '  length: ' + v;\r\n\t      }\r\n\t      if (i < l - 1) {\r\n\t        valueStr += ',';\r\n\t      }\r\n\t      valueStr += '\\n';\r\n\t    }, false, false);\r\n\t    valueStr += '}';\r\n\t  }\r\n\t  else if (utils.isObject(str0) && str0._njEx) {\r\n\t    valueStr = str0._njEx;\r\n\t  }\r\n\t  else {  //非字符串值\r\n\t    //The \"_njShim\" property is used to distinguish whether the incoming is an normal array.\r\n\t    valueStr = JSON.stringify(str0._njShim ? str0._njShim : str0);\r\n\t  }\r\n\t\r\n\t  if (filterStr === '') {\r\n\t    return valueStr;\r\n\t  }\r\n\t  else {  //包含过滤器\r\n\t    return {\r\n\t      valueStr: valueStr,\r\n\t      filterStr: filterStr\r\n\t    };\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction _buildNode(node, fns, counter, retType, level) {\r\n\t  var fnStr = '',\r\n\t    useString = fns.useString;\r\n\t\r\n\t  if (node.type === 'nj_plaintext') {  //文本节点\r\n\t    var valueStr = _buildProps(node.content[0], counter, fns),\r\n\t      filterStr;\r\n\t    if (utils.isObject(valueStr)) {\r\n\t      filterStr = valueStr.filterStr;\r\n\t      valueStr = valueStr.valueStr;\r\n\t    }\r\n\t\r\n\t    var textStr = _buildRender(1, retType, { text: valueStr }, fns, level);\r\n\t    if (filterStr) {\r\n\t      textStr = filterStr + textStr;\r\n\t    }\r\n\t\r\n\t    if (useString) {\r\n\t      fnStr += textStr;\r\n\t    }\r\n\t    else {  //文本中的特殊字符需转义\r\n\t      fnStr += replaceSpecialSymbol(textStr);\r\n\t    }\r\n\t  }\r\n\t  else if (node.type === 'nj_expr') {  //块表达式节点\r\n\t    var _exprC = counter._expr++,\r\n\t      _dataReferC = counter._dataRefer++,\r\n\t      dataReferStr = '';\r\n\t    fnStr += '\\nvar _expr' + _exprC + ' = p1.exprs[\\'' + node.expr + '\\'];\\n';\r\n\t\r\n\t    if (node.refer) {\r\n\t      dataReferStr += 'var _dataRefer' + _dataReferC + ' = [\\n';\r\n\t      var props = node.refer.props,\r\n\t        len = props.length,\r\n\t        filterStr = '';\r\n\t\r\n\t      utils.each(props, function (o, i) {\r\n\t        var valueStr = _buildPropData(o, counter, fns, true);\r\n\t        if (utils.isObject(valueStr)) {\r\n\t          filterStr += valueStr.filterStr;\r\n\t          valueStr = valueStr.valueStr;\r\n\t        }\r\n\t\r\n\t        dataReferStr += '  ' + valueStr + (i < len - 1 ? ',' : '');\r\n\t      }, false, true);\r\n\t      dataReferStr += '\\n];\\n';\r\n\t\r\n\t      if (filterStr !== '') {\r\n\t        dataReferStr = filterStr + dataReferStr;\r\n\t      }\r\n\t\r\n\t      fnStr += dataReferStr;\r\n\t    }\r\n\t\r\n\t    //如果表达式不存在则打印警告信息\r\n\t    fnStr += 'p1.throwIf(_expr' + _exprC + ', \\'' + node.expr + '\\', \\'expr\\');\\n';\r\n\t\r\n\t    //执行表达式块\r\n\t    var _thisC = counter._this++,\r\n\t      configE = exprConfig[node.expr],\r\n\t      noConfig = !configE,\r\n\t      newContext = configE ? configE.newContext : false,\r\n\t      newContextP = counter.newContext;\r\n\t\r\n\t    fnStr += '\\nvar _this' + _thisC + ' = p1.lightObj();\\n';\r\n\t    if (noConfig || configE.useString) {\r\n\t      fnStr += '_this' + _thisC + '.useString = p1.useString;\\n';\r\n\t    }\r\n\t    if (noConfig || configE.data) {\r\n\t      fnStr += '_this' + _thisC + '.data = parent.data;\\n';\r\n\t    }\r\n\t    if (noConfig || configE.parent) {\r\n\t      fnStr += '_this' + _thisC + '.parent = parent.parent;\\n';\r\n\t    }\r\n\t    if (noConfig || configE.index) {\r\n\t      fnStr += '_this' + _thisC + '.index = parent.index;\\n';\r\n\t    }\r\n\t\r\n\t    //params块\r\n\t    var paramsEStr = 'p4';\r\n\t    if (retType && retType._paramsE) {\r\n\t      paramsEStr = retType._paramsE;\r\n\t    }\r\n\t    if (noConfig || configE.paramsExpr) {\r\n\t      fnStr += '_this' + _thisC + '.paramsExpr = ' + paramsEStr + ';\\n';\r\n\t    }\r\n\t\r\n\t    if (noConfig || configE.result) {\r\n\t      fnStr += '_this' + _thisC + '.result = ' + (node.content ? 'p1.exprRet(p1, ' + (newContextP ? '_' : '') + 'p2, p1.fn' + _buildFn(node.content, fns, ++fns._no, newContext, level) + ', ' + paramsEStr + ')' : 'p1.noop') + ';\\n';\r\n\t    }\r\n\t    if (noConfig || configE.inverse) {\r\n\t      fnStr += '_this' + _thisC + '.inverse = ' + (node.contentElse ? 'p1.exprRet(p1, ' + (newContextP ? '_' : '') + 'p2, p1.fn' + _buildFn(node.contentElse, fns, ++fns._no, newContext, level) + ', ' + paramsEStr + ')' : 'p1.noop') + ';\\n';\r\n\t    }\r\n\t\r\n\t    //渲染\r\n\t    fnStr += _buildRender(2, retType, {\r\n\t      _expr: _exprC,\r\n\t      _dataRefer: dataReferStr !== '' ? _dataReferC : 'none',\r\n\t      _this: _thisC\r\n\t    }, fns, level);\r\n\t  }\r\n\t  else {  //元素节点\r\n\t    //节点类型和typeRefer\r\n\t    var _typeC = counter._type++,\r\n\t      _type;\r\n\t    if (node.typeRefer) {\r\n\t      _type = node.typeRefer.props[0].prop.name;\r\n\t    }\r\n\t    else {\r\n\t      _type = node.type.toLowerCase();\r\n\t    }\r\n\t\r\n\t    var typeStr;\r\n\t    if (!useString) {\r\n\t      typeStr = 'p1.components[\\'' + _type + '\\'] ? p1.components[\\'' + _type + '\\'] : \\'' + _type + '\\'';\r\n\t    }\r\n\t    else {\r\n\t      typeStr = '\\'' + _type + '\\'';\r\n\t    }\r\n\t\r\n\t    if (node.typeRefer) {\r\n\t      var _typeReferC = counter._typeRefer++,\r\n\t        valueStrT = _buildProps(node.typeRefer, counter, fns);\r\n\t      if (utils.isObject(valueStrT)) {\r\n\t        fnStr += valueStrT.filterStr;\r\n\t        valueStrT = valueStrT.valueStr;\r\n\t      }\r\n\t\r\n\t      fnStr += '\\nvar _typeRefer' + _typeReferC + ' = ' + valueStrT + ';\\n';\r\n\t      fnStr += 'var _type' + _typeC + ' = _typeRefer' + _typeReferC + ' ? _typeRefer' + _typeReferC + ' : (' + typeStr + ');\\n';\r\n\t    }\r\n\t    else {\r\n\t      fnStr += '\\nvar _type' + _typeC + ' = ' + typeStr + ';\\n';\r\n\t    }\r\n\t\r\n\t    //节点参数\r\n\t    var params = node.params,\r\n\t      paramsExpr = node.paramsExpr,\r\n\t      paramsStr = '';\r\n\t    if (params || paramsExpr) {\r\n\t      var _paramsC = counter._params++;\r\n\t      paramsStr = 'var _params' + _paramsC + ' = ';\r\n\t\r\n\t      //params块\r\n\t      if (paramsExpr) {\r\n\t        var _paramsEC = counter._paramsE++;\r\n\t        paramsStr += (useString ? '\\'\\'' : 'null') + ';\\n';\r\n\t        paramsStr += 'var _paramsE' + _paramsEC + ' = {};\\n';\r\n\t\r\n\t        //params块的子节点\r\n\t        paramsStr += _buildContent(paramsExpr.content, fns, counter, { _paramsE: '_paramsE' + _paramsEC });\r\n\t\r\n\t        //合并params块的值\r\n\t        if (!useString) {\r\n\t          paramsStr += '\\n_params' + _paramsC + ' = _paramsE' + _paramsEC + ';\\n';\r\n\t          //paramsStr += '\\np1.assign(_params' + _paramsC + ', _paramsE' + _paramsEC + ');\\n';\r\n\t        }\r\n\t        else {\r\n\t          var keys = '';\r\n\t          utils.each(params, function (v, k, i, l) {\r\n\t            if (i == 0) {\r\n\t              keys += '{ ';\r\n\t            }\r\n\t            keys += k + ': 1';\r\n\t\r\n\t            if (i < l - 1) {\r\n\t              keys += ', '\r\n\t            }\r\n\t            else {\r\n\t              keys += ' }';\r\n\t            }\r\n\t          }, false, false);\r\n\t          paramsStr += '_params' + _paramsC + ' += p1.assignStringProp(_paramsE' + _paramsEC + ', ' + (keys === '' ? 'null' : keys) + ');\\n';\r\n\t        }\r\n\t      }\r\n\t\r\n\t      if (params) {\r\n\t        var paramKeys = Object.keys(params),\r\n\t          len = paramKeys.length,\r\n\t          filterStr = '';\r\n\t\r\n\t        if (!useString && !paramsExpr) {\r\n\t          paramsStr += '{\\n';\r\n\t        }\r\n\t\r\n\t        utils.each(paramKeys, function (k, i) {\r\n\t          var valueStr = _buildProps(params[k], counter, fns);\r\n\t          if (utils.isObject(valueStr)) {\r\n\t            filterStr += valueStr.filterStr;\r\n\t            valueStr = valueStr.valueStr;\r\n\t          }\r\n\t\r\n\t          if (!useString && k === 'style') {  //将style字符串转换为对象\r\n\t            valueStr = 'p1.styleProps(' + valueStr + ')';\r\n\t          }\r\n\t\r\n\t          var key = k,\r\n\t            onlyKey = ('\\'' + key + '\\'') === valueStr;\r\n\t          if (!useString) {\r\n\t            key = utils.fixPropName(k);\r\n\t          }\r\n\t          if (!paramsExpr) {\r\n\t            if (!useString) {\r\n\t              paramsStr += '  \\'' + key + '\\': ' + (!onlyKey ? valueStr : 'true') + (i < len - 1 ? ',\\n' : '');\r\n\t            }\r\n\t            else {\r\n\t              paramsStr += (i > 0 ? '  + ' : '') + '\\' ' + key + (!onlyKey ? '=\"\\' + ' + valueStr + ' + \\'\"\\'' : ' \\'') + (i == len - 1 ? ';' : '') + '\\n';\r\n\t            }\r\n\t          }\r\n\t          else {\r\n\t            if (!useString) {\r\n\t              paramsStr += '_params' + _paramsC + '[\\'' + key + '\\'] = ' + (!onlyKey ? valueStr : 'true') + ';\\n';\r\n\t            }\r\n\t            else {\r\n\t              paramsStr += '_params' + _paramsC + ' += \\' ' + key + (!onlyKey ? '=\"\\' + ' + valueStr + ' + \\'\"\\'' : ' \\'') + ';\\n';\r\n\t            }\r\n\t          }\r\n\t        }, false, false);\r\n\t\r\n\t        if (!useString && !paramsExpr) {\r\n\t          paramsStr += '\\n};\\n';\r\n\t        }\r\n\t\r\n\t        if (filterStr !== '') {\r\n\t          paramsStr = filterStr + paramsStr;\r\n\t        }\r\n\t      }\r\n\t\r\n\t      fnStr += paramsStr;\r\n\t    }\r\n\t\r\n\t    var _compParamC, _childrenC;\r\n\t    if (!useString) {  //组件引擎参数\r\n\t      _compParamC = counter._compParam++;\r\n\t      fnStr += 'var _compParam' + _compParamC + ' = [_type' + _typeC + ', ' + (paramsStr !== '' ? '_params' + _paramsC : 'null') + '];\\n';\r\n\t    }\r\n\t    else {  //子节点字符串\r\n\t      _childrenC = counter._children++;\r\n\t      fnStr += 'var _children' + _childrenC + ' = \\'\\';\\n';\r\n\t    }\r\n\t\r\n\t    //子节点\r\n\t    fnStr += _buildContent(node.content, fns, counter, !useString\r\n\t      ? { _compParam: '_compParam' + _compParamC }\r\n\t      : { _children: '_children' + _childrenC }, level != null ? level + 1 : level);\r\n\t\r\n\t    //渲染\r\n\t    fnStr += _buildRender(3, retType, !useString\r\n\t      ? { _compParam: _compParamC }\r\n\t      : { _type: _typeC, _params: paramsStr !== '' ? _paramsC : null, _children: _childrenC, _selfClose: node.selfCloseTag }, fns, level);\r\n\t  }\r\n\t\r\n\t  return fnStr;\r\n\t}\r\n\t\r\n\tfunction _buildContent(content, fns, counter, retType, level) {\r\n\t  var fnStr = '';\r\n\t  if (!content) {\r\n\t    return fnStr;\r\n\t  }\r\n\t\r\n\t  utils.each(content, function (node) {\r\n\t    fnStr += _buildNode(node, fns, counter, retType, level);\r\n\t  }, false, true);\r\n\t\r\n\t  return fnStr;\r\n\t}\r\n\t\r\n\tfunction _buildRender(nodeType, retType, params, fns, level) {\r\n\t  var retStr,\r\n\t    useString = fns.useString;\r\n\t\r\n\t  switch (nodeType) {\r\n\t    case 1:  //文本节点\r\n\t      retStr = _buildLevelSpace(level, useString) + params.text + (!useString || level == null ? '' : ' + \\'\\\\n\\'');\r\n\t      break;\r\n\t    case 2:  //块表达式\r\n\t      retStr = '_expr' + params._expr + '.apply(_this' + params._this + (params._dataRefer !== 'none' ? ', _dataRefer' + params._dataRefer : '') + ')';\r\n\t      break;\r\n\t    case 3:  //元素节点\r\n\t      if (!useString) {\r\n\t        retStr = 'p1.h.apply(null, _compParam' + params._compParam + ')';\r\n\t      }\r\n\t      else {\r\n\t        var levelSpace = _buildLevelSpace(level, useString);\r\n\t        retStr = levelSpace + '\\'<\\' + _type' + params._type + ' + ' + (params._params != null ? '_params' + params._params + ' + ' : '');\r\n\t        if (!params._selfClose) {\r\n\t          retStr += '\\'>\\\\n\\'';\r\n\t          retStr += ' + _children' + params._children + ' + ';\r\n\t          retStr += levelSpace + '\\'</\\' + _type' + params._type + ' + \\'>\\\\n\\'';\r\n\t        }\r\n\t        else {\r\n\t          retStr += '\\' />\\\\n\\'';\r\n\t        }\r\n\t      }\r\n\t      break;\r\n\t  }\r\n\t\r\n\t  //保存方式\r\n\t  if (retType === '1') {\r\n\t    return '\\nreturn ' + retStr + ';';\r\n\t  }\r\n\t  else if (retType === '2') {\r\n\t    if (!useString) {\r\n\t      return '\\nret.push(' + retStr + ');\\n';\r\n\t    }\r\n\t    else {\r\n\t      return '\\nret += ' + retStr + ';\\n';\r\n\t    }\r\n\t  }\r\n\t  else if (retType._paramsE) {\r\n\t    return '\\n' + retStr + ';\\n';\r\n\t  }\r\n\t  else {\r\n\t    if (!useString) {\r\n\t      return '\\n' + retType._compParam + '.push(' + retStr + ');\\n';\r\n\t    }\r\n\t    else {\r\n\t      return '\\n' + retType._children + ' += ' + retStr + ';\\n';\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\tfunction _buildLevelSpace(level, useString) {\r\n\t  var ret = '';\r\n\t  if (useString && level != null && level > 0) {\r\n\t    ret += '\\'';\r\n\t    for (var i = 0; i < level; i++) {\r\n\t      ret += '  ';\r\n\t    }\r\n\t    ret += '\\' + ';\r\n\t  }\r\n\t  return ret;\r\n\t}\r\n\t\r\n\tmodule.exports = function (ast, useString) {\r\n\t  var fns = {\r\n\t    useString: useString,\r\n\t    _no: 0,  //块表达式函数计数\r\n\t    _noT: 0  //tmpl块模板函数计数\r\n\t  };\r\n\t\r\n\t  _buildFn(ast, fns, fns._no, null, 0);\r\n\t  return fns;\r\n\t};\r\n\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\tvar SPACIAL_SYMBOLS = {\r\n\t  nbsp: '\\u00A0',\r\n\t  ensp: '\\u2002',\r\n\t  emsp: '\\u2003',\r\n\t  thinsp: '\\u2009',\r\n\t  zwnj: '\\u200C',\r\n\t  zwj: '\\u200D',\r\n\t  lt: '<',\r\n\t  gt: '>',\r\n\t  amp: '&'\r\n\t};\r\n\t\r\n\tvar REGEX_SYMBOLS = new RegExp('&(' + Object.keys(SPACIAL_SYMBOLS).join('|') + ');', 'g');\r\n\tfunction replace(str) {\r\n\t  return str.replace(REGEX_SYMBOLS, function (all, match) {\r\n\t    return SPACIAL_SYMBOLS[match];\r\n\t  });\r\n\t}\r\n\t\r\n\tmodule.exports = replace;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  tools = __webpack_require__(3),\r\n\t  tranElem = __webpack_require__(5),\r\n\t  tmplRule = nj.tmplRule,\r\n\t  shim = __webpack_require__(18);\r\n\t\r\n\t//Cache the string template by unique key\r\n\tnj.strTmpls = {};\r\n\t\r\n\t//Compile string template\r\n\tfunction compileStringTmpl(tmpl) {\r\n\t  var tmplKey, ret;\r\n\t  if (this) {  //The \"tmplKey\" parameter can be passed by the \"this\" object.\r\n\t    tmplKey = this.tmplKey;\r\n\t  }\r\n\t\r\n\t  if (tmplKey) {  //If the cache already has template data, direct return the template.\r\n\t    ret = nj.strTmpls[tmplKey];\r\n\t    if (ret) {\r\n\t      return ret;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  var isStr = tools.isString(tmpl),\r\n\t    xmls = tmpl,\r\n\t    args = arguments,\r\n\t    splitNo = 0,\r\n\t    params = [],\r\n\t    fullXml = '',\r\n\t    exArgs;\r\n\t\r\n\t  if (isStr) {\r\n\t    xmls = tmpl.split(tmplRule.externalSplit);\r\n\t\r\n\t    var pattern = tmplRule.external(),\r\n\t      matchArr;\r\n\t    exArgs = [];\r\n\t    while (matchArr = pattern.exec(tmpl)) {\r\n\t      exArgs.push(matchArr[1]);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //Connection xml string\r\n\t  var l = xmls.length;\r\n\t  tools.each(xmls, function (xml, i) {\r\n\t    var split = '';\r\n\t    if (i < l - 1) {\r\n\t      var last = xml.length - 1,\r\n\t        useShim = xml[last] === '@',\r\n\t        arg, isEx;\r\n\t\r\n\t      if (isStr) {\r\n\t        var exArg = exArgs[i],\r\n\t          match = exArg.match(/#(\\d+)/);\r\n\t\r\n\t        if (match && match[1] != null) {  //分隔符格式为\"${#x}\", 则按其编号顺序从nj函数参数列表中获取\r\n\t          arg = args[parseInt(match[1], 10) + 1];\r\n\t        }\r\n\t        else {\r\n\t          arg = exArg;\r\n\t          useShim = isEx = true;\r\n\t        }\r\n\t      }\r\n\t      else {\r\n\t        arg = args[i + 1];\r\n\t      }\r\n\t\r\n\t      if (!tools.isString(arg) || useShim) {\r\n\t        split = '_nj-split' + splitNo + '_';\r\n\t\r\n\t        //Use the shim function to convert the parameter when the front of it with a \"@\" mark.\r\n\t        if (useShim) {\r\n\t          if (isEx) {\r\n\t            arg = shim({ _njEx: arg });\r\n\t          }\r\n\t          else {\r\n\t            xml = xml.substr(0, last);\r\n\t            arg = shim(arg);\r\n\t          }\r\n\t        }\r\n\t\r\n\t        params.push(arg);\r\n\t        splitNo++;\r\n\t      }\r\n\t      else {\r\n\t        split = arg;\r\n\t      }\r\n\t    }\r\n\t\r\n\t    fullXml += xml + split;\r\n\t  }, false, true);\r\n\t\r\n\t  fullXml = _clearNotesAndBlank(fullXml);\r\n\t\r\n\t  if (tmplKey == null) {\r\n\t    //Get unique key\r\n\t    tmplKey = tools.uniqueKey(fullXml + _paramsStr(params));\r\n\t\r\n\t    ret = nj.strTmpls[tmplKey];\r\n\t    if (ret) {\r\n\t      return ret;\r\n\t    }\r\n\t  }\r\n\t\r\n\t  //Resolve string to element\r\n\t  ret = _checkStringElem(fullXml, params);\r\n\t\r\n\t  //Set the properties for the template object\r\n\t  _setTmplProps(ret, tmplKey);\r\n\t\r\n\t  //Save to the cache\r\n\t  nj.strTmpls[tmplKey] = ret;\r\n\t\r\n\t  return ret;\r\n\t}\r\n\t\r\n\t//Resolve string to element\r\n\tfunction _checkStringElem(xml, params) {\r\n\t  var root = [],\r\n\t    current = {\r\n\t      elem: root,\r\n\t      elemName: 'root',\r\n\t      parent: null\r\n\t    },\r\n\t    parent = null,\r\n\t    pattern = tmplRule.checkElem(),\r\n\t    matchArr;\r\n\t\r\n\t  while (matchArr = pattern.exec(xml)) {\r\n\t    var textBefore = matchArr[1],\r\n\t      elem = matchArr[2],\r\n\t      elemName = matchArr[3],\r\n\t      textAfter = matchArr[4];\r\n\t\r\n\t    //Text before tag\r\n\t    if (textBefore && textBefore !== '\\n') {\r\n\t      textBefore = _formatText(textBefore);\r\n\t      _setText(textBefore, current.elem, params);\r\n\t    }\r\n\t\r\n\t    //Element tag\r\n\t    if (elem) {\r\n\t      if (elemName[0] === '/') {  //Close tag\r\n\t        if (elemName === '/' + current.elemName) {\r\n\t          current = current.parent;\r\n\t        }\r\n\t      }\r\n\t      else if (elem[elem.length - 2] === '/') {  //Self close tag\r\n\t        _setSelfCloseElem(elem, elemName, current.elem, params);\r\n\t      }\r\n\t      else {  //Open tag\r\n\t        parent = current;\r\n\t        current = {\r\n\t          elem: [],\r\n\t          elemName: elemName,\r\n\t          parent: parent\r\n\t        };\r\n\t\r\n\t        parent.elem.push(current.elem);\r\n\t        _setElem(elem, elemName, current.elem, params);\r\n\t      }\r\n\t    }\r\n\t\r\n\t    //Text after tag\r\n\t    if (textAfter && textAfter !== '\\n') {\r\n\t      textAfter = _formatText(textAfter);\r\n\t      _setText(textAfter, current.elem, params);\r\n\t    }\r\n\t  }\r\n\t\r\n\t  return root;\r\n\t}\r\n\t\r\n\tfunction _clearNotesAndBlank(str) {\r\n\t  return str.replace(/<!--[\\s\\S]*?-->/g, '').replace(/>\\s+([^\\s<]*)\\s+</g, '>$1<').trim();\r\n\t}\r\n\t\r\n\tfunction _formatText(str) {\r\n\t  return str.replace(/\\n/g, '\\\\n').replace(/\\r/g, '').trim();\r\n\t}\r\n\t\r\n\t//Merge parameters to string\r\n\tfunction _paramsStr(params) {\r\n\t  var str = '';\r\n\t  tools.each(params, function (p) {\r\n\t    if (tools.isArray(p)) {\r\n\t      str += '|' + _cascadeArr(p, true);\r\n\t    }\r\n\t    else {\r\n\t      str += '|' + JSON.stringify(p);\r\n\t    }\r\n\t  }, false, true);\r\n\t\r\n\t  return str;\r\n\t}\r\n\t\r\n\tfunction _cascadeArr(p, isArr) {\r\n\t  var str;\r\n\t  if (isArr || tools.isArray(p)) {\r\n\t    if (p.njKey != null) {\r\n\t      str = '+' + p.njKey;\r\n\t    }\r\n\t    else {\r\n\t      str = '';\r\n\t      for (var i = 0, l = p.length; i < l; i++) {\r\n\t        str += _cascadeArr(p[i]);\r\n\t      }\r\n\t    }\r\n\t  }\r\n\t  else {\r\n\t    str = '+' + p;\r\n\t  }\r\n\t\r\n\t  return str;\r\n\t}\r\n\t\r\n\t//Set element node\r\n\tfunction _setElem(elem, elemName, elemArr, params, bySelfClose) {\r\n\t  var ret, paramsExpr;\r\n\t  if (elemName[0] === tmplRule.exprRule) {\r\n\t    ret = elem.substring(1, elem.length - 1);\r\n\t  }\r\n\t  else if (elemName.indexOf(tmplRule.propRule) === 0) {\r\n\t    ret = tmplRule.exprRule + 'prop {\\'' + elemName.substr(tmplRule.propRule.length) + '\\'}';\r\n\t  }\r\n\t  else {\r\n\t    var retS = _getSplitParams(elem, params);\r\n\t    ret = retS.elem;\r\n\t    paramsExpr = retS.params;\r\n\t  }\r\n\t\r\n\t  if (bySelfClose) {\r\n\t    var retC = [ret];\r\n\t    if (paramsExpr) {\r\n\t      retC.push(paramsExpr);\r\n\t    }\r\n\t\r\n\t    elemArr.push(retC);\r\n\t  }\r\n\t  else {\r\n\t    elemArr.push(ret);\r\n\t    if (paramsExpr) {\r\n\t      elemArr.push(paramsExpr);\r\n\t    }\r\n\t  }\r\n\t}\r\n\t\r\n\t//Extract split parameters\r\n\tfunction _getSplitParams(elem, params) {\r\n\t  var exprRule = tmplRule.exprRule,\r\n\t    startRule = tmplRule.startRule,\r\n\t    endRule = tmplRule.endRule,\r\n\t    paramsExpr;\r\n\t\r\n\t  //Replace the parameter like \"prop=_nj-split0_\".\r\n\t  elem = elem.replace(/([^\\s={}>]+)=['\"]?_nj-split(\\d+)_['\"]?/g, function (all, key, no) {\r\n\t    if (!paramsExpr) {\r\n\t      paramsExpr = [exprRule + 'params'];\r\n\t    }\r\n\t\r\n\t    paramsExpr.push([exprRule + \"param \" + startRule + \"'\" + key + \"'\" + endRule, params[no]]);\r\n\t    return '';\r\n\t  });\r\n\t\r\n\t  //Replace the parameter like \"{...props}\" and \"{prop}\".\r\n\t  elem = elem.replace(tmplRule.replaceBraceParam(), function (all, begin, prop) {\r\n\t    prop = prop.trim();\r\n\t    var propN = prop.replace(/\\.\\.\\//g, '');\r\n\t\r\n\t    if (propN.indexOf('...') === 0) {\r\n\t      if (!paramsExpr) {\r\n\t        paramsExpr = [exprRule + 'params'];\r\n\t      }\r\n\t\r\n\t      paramsExpr.push([exprRule + 'spreadParam ' + startRule + prop.replace(/\\.\\.\\./g, '') + endRule + '/']);\r\n\t      return ' ';\r\n\t    }\r\n\t    else {\r\n\t      return ' ' + propN + '=' + all.trim();\r\n\t    }\r\n\t  });\r\n\t\r\n\t  return {\r\n\t    elem: elem,\r\n\t    params: paramsExpr\r\n\t  };\r\n\t}\r\n\t\r\n\t//Set self close element node\r\n\tfunction _setSelfCloseElem(elem, elemName, elemArr, params) {\r\n\t  if (elemName === tmplRule.exprRule + 'else') {\r\n\t    elemArr.push(elem.substr(1, 5));\r\n\t  }\r\n\t  else {\r\n\t    _setElem(elem, elemName, elemArr, params, true);\r\n\t  }\r\n\t}\r\n\t\r\n\t//Set text node\r\n\tfunction _setText(text, elemArr, params) {\r\n\t  var pattern = /_nj-split(\\d+)_/g, matchArr,\r\n\t    splitNos = [];\r\n\t\r\n\t  while ((matchArr = pattern.exec(text))) {\r\n\t    splitNos.push(matchArr[1]);\r\n\t  }\r\n\t\r\n\t  if (splitNos.length) {\r\n\t    tools.each(text.split(/_nj-split(?:\\d+)_/), function (t) {\r\n\t      if (t !== '') {\r\n\t        elemArr.push(t);\r\n\t      }\r\n\t\r\n\t      var no = splitNos.shift();\r\n\t      if (no != null) {\r\n\t        elemArr.push(params[no]);\r\n\t      }\r\n\t    }, false, true);\r\n\t  }\r\n\t  else {\r\n\t    elemArr.push(text);\r\n\t  }\r\n\t}\r\n\t\r\n\t//Set template props\r\n\tfunction _setTmplProps(tmpl, key) {\r\n\t  tmpl.njKey = key;\r\n\t\r\n\t  tmpl.render = function () {\r\n\t    return nj.compile(this, this.njKey).apply(null, arguments);\r\n\t  };\r\n\t\r\n\t  tmpl.renderH = function () {\r\n\t    return nj.compileH(this, this.njKey).apply(null, arguments);\r\n\t  };\r\n\t}\r\n\t\r\n\tmodule.exports = compileStringTmpl;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports) {\n\n\t'use strict';\r\n\t\r\n\t//Converts any value to the parameter of NornJ template can be parsed.\r\n\tmodule.exports = function (obj) {\r\n\t  return {\r\n\t    _njShim: obj\r\n\t  };\r\n\t};\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar checkStringElem = __webpack_require__(17);\r\n\t\r\n\tmodule.exports = function (key) {\r\n\t  return function() {\r\n\t    return checkStringElem.apply({ tmplKey: key }, arguments);\r\n\t  };\r\n\t};\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\r\n\t\r\n\tvar nj = __webpack_require__(1),\r\n\t  setTmplRule = __webpack_require__(13);\r\n\t\r\n\tmodule.exports = function (configs) {\r\n\t  var delimiters = configs.delimiters,\r\n\t    includeParser = configs.includeParser,\r\n\t    createElement = configs.createElement;\r\n\t\r\n\t  if(delimiters) {\r\n\t    setTmplRule(delimiters);\r\n\t  }\r\n\t\r\n\t  if(includeParser) {\r\n\t    nj.includeParser = includeParser;\r\n\t  }\r\n\t\r\n\t  if(createElement) {\r\n\t    nj.createElement = createElement;\r\n\t  }\r\n\t};\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** nornj.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 78a995206a891aa46881\n **/","'use strict';\r\n\r\nvar nj = require('./core'),\r\n  utils = require('./utils/utils'),\r\n  compiler = require('./compiler/compile'),\r\n  compileStringTmpl = require('./parser/checkStringElem'),\r\n  tmplByKey = require('./utils/tmplByKey'),\r\n  config = require('./config');\r\n\r\nnj.compileStringTmpl = compileStringTmpl;\r\nnj.tmplByKey = tmplByKey;\r\nnj.config = config;\r\nutils.assign(nj, compiler, utils);\r\n\r\nvar global = typeof self !== 'undefined' ? self : this;\r\n\r\nmodule.exports = global.NornJ = global.nj = nj;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/base.js\n ** module id = 0\n ** module chunks = 0\n **/","'use strict';\r\n\r\nfunction nj() {\r\n  return nj.compileStringTmpl.apply(null, arguments);\r\n}\r\n\r\nnj.createElement = null;\r\nnj.components = {};\r\nnj.asts = {};\r\nnj.templates = {};\r\nnj.errorTitle = 'NornJ:';\r\nnj.tmplRule = {};\r\n\r\nmodule.exports = nj;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/core.js\n ** module id = 1\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar tools = require('./tools'),\r\n  transformElement = require('../transforms/transformElement'),\r\n  transformParam = require('../transforms/transformParam'),\r\n  transformData = require('../transforms/transformData'),\r\n  escape = require('./escape'),\r\n  checkElem = require('../parser/checkElem'),\r\n  registerComponent = require('./registerComponent'),\r\n  filter = require('../helpers/filter'),\r\n  expression = require('../helpers/expression'),\r\n  setTmplRule = require('./setTmplRule');\r\n\r\n//Set default param rule\r\nsetTmplRule();\r\n\r\nmodule.exports = tools.assign(\r\n  {\r\n    escape: escape,\r\n    setTmplRule: setTmplRule\r\n  },\r\n  checkElem,\r\n  registerComponent,\r\n  filter,\r\n  expression,\r\n  tools,\r\n  transformElement,\r\n  transformParam,\r\n  transformData\r\n);\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/utils.js\n ** module id = 2\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  assign = require('object-assign'),\r\n  arrayPush = Array.prototype.push,\r\n  errorTitle = nj.errorTitle;\r\n\r\n//Push one by one to array\r\nfunction listPush(arr1, arr2) {\r\n  arrayPush.apply(arr1, arr2);\r\n  return arr1;\r\n}\r\n\r\n//判断是否为数组\r\nfunction isArray(obj) {\r\n  return Array.isArray(obj);\r\n}\r\n\r\n//判断是否为对象\r\nfunction isObject(obj) {\r\n  var type = typeof obj;\r\n  return !isArray(obj) && (type === 'function' || type === 'object' && !!obj);\r\n}\r\n\r\n//判断是否为字符串\r\nfunction isString(obj) {\r\n  return Object.prototype.toString.call(obj) === '[object String]';\r\n}\r\n\r\n//获取属性值\r\nfunction _getProperty(key) {\r\n  return function (obj) {\r\n    return obj == null ? void 0 : obj[key];\r\n  };\r\n}\r\n\r\n//是否为类数组\r\nvar _getLength = _getProperty('length');\r\nfunction isArrayLike(obj) {\r\n  var length = _getLength(obj);\r\n  return typeof length == 'number' && length >= 0;\r\n}\r\n\r\n//遍历数组或对象\r\nfunction each(obj, func, context, isArr) {\r\n  if (!obj) {\r\n    return;\r\n  }\r\n\r\n  if (isArr == null) {\r\n    isArr = isArrayLike(obj);\r\n  }\r\n\r\n  //设置回调函数上下文\r\n  context = context ? context : obj;\r\n\r\n  if (isArr) {\r\n    for (var i = 0, l = obj.length; i < l; i++) {\r\n      var ret = func.call(context, obj[i], i);\r\n\r\n      if (ret === false) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    var keys = Object.keys(obj),\r\n      l = keys.length;\r\n    for (var i = 0; i < l; i++) {\r\n      var k = keys[i],\r\n        ret = func.call(context, obj[k], k, i, l);\r\n\r\n      if (ret === false) {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//Transform multidimensional array to one-dimensional array\r\nfunction flatten(obj) {\r\n  var output = [],\r\n    idx = 0;\r\n\r\n  if (isArray(obj)) {\r\n    for (var i = 0, l = _getLength(obj); i < l; i++) {\r\n      var value = obj[i];\r\n      //flatten current level of array or arguments object\r\n      value = flatten(value);\r\n\r\n      var j = 0, len = value.length;\r\n      output.length += len;\r\n      while (j < len) {\r\n        output[idx++] = value[j++];\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    output[idx++] = obj;\r\n  }\r\n\r\n  return output;\r\n}\r\n\r\n//Noop function\r\nfunction noop() { }\r\n\r\n//抛出异常\r\nfunction throwIf(val, msg, type) {\r\n  if (!val) {\r\n    switch (type) {\r\n      case 'expr':\r\n        throw Error(errorTitle + 'Expression \"' + msg + '\" is undefined, please check it has been registered.');\r\n      default:\r\n        throw Error(errorTitle + (msg || val));\r\n    }\r\n  }\r\n}\r\n\r\n//Print warn\r\nfunction warn(msg, type) {\r\n  var ret = errorTitle;\r\n  switch (type) {\r\n    case 'filter':\r\n      ret += 'A filter called \"' + msg + '\" is undefined.';\r\n    default:\r\n      ret += msg;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//create a unique key\r\nfunction uniqueKey(str, hash) {\r\n  var len = str.length;\r\n  if (len == 0) {\r\n    return str;\r\n  }\r\n  if (hash == null) {\r\n    hash = 0;\r\n  }\r\n\r\n  var i, chr;\r\n  for (i = 0, len = str.length; i < len; i++) {\r\n    chr = str.charCodeAt(i);\r\n    hash = ((hash << 5) - hash) + chr;\r\n    hash |= 0;\r\n  }\r\n\r\n  return hash;\r\n}\r\n\r\n//create light weight object\r\nfunction lightObj() {\r\n  return Object.create(null);\r\n}\r\n\r\n//Clear quotation marks\r\nfunction clearQuot(value) {\r\n  var charF = value[0],\r\n    regex;\r\n\r\n  if (charF === '\\'') {\r\n    regex = /[']+/g;\r\n  }\r\n  else if (charF === '\"') {\r\n    regex = /[\"]+/g;\r\n  }\r\n  if (regex) {\r\n    value = value.replace(regex, '');\r\n  }\r\n\r\n  return value;\r\n}\r\n\r\n//Transform to camel-case\r\nfunction toCamelCase(str) {\r\n  if (str.indexOf('-') > -1) {\r\n    str = str.replace(/-\\w/g, function (letter) {\r\n      return letter.substr(1).toUpperCase();\r\n    });\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\nvar tools = {\r\n  isArray: isArray,\r\n  isArrayLike: isArrayLike,\r\n  isObject: isObject,\r\n  isString: isString,\r\n  each: each,\r\n  flatten: flatten,\r\n  throwIf: throwIf,\r\n  assign: assign,\r\n  uniqueKey: uniqueKey,\r\n  lightObj: lightObj,\r\n  listPush: listPush,\r\n  clearQuot: clearQuot,\r\n  toCamelCase: toCamelCase,\r\n  warn: warn,\r\n  noop: noop\r\n};\r\n\r\nmodule.exports = tools;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/tools.js\n ** module id = 3\n ** module chunks = 0\n **/","'use strict';\n/* eslint-disable no-unused-vars */\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (e) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (Object.getOwnPropertySymbols) {\n\t\t\tsymbols = Object.getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/object-assign/index.js\n ** module id = 4\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('../utils/tools'),\r\n  tranParam = require('./transformParam'),\r\n  tmplRule = nj.tmplRule;\r\n\r\n//提取xml open tag\r\nfunction getXmlOpenTag(obj) {\r\n  return tmplRule.xmlOpenTag.exec(obj);\r\n}\r\n\r\n//验证xml self close tag\r\nvar REGEX_XML_SELF_CLOSE_TAG = /^<[^>]+\\/>$/i;\r\nfunction isXmlSelfCloseTag(obj) {\r\n  return REGEX_XML_SELF_CLOSE_TAG.test(obj);\r\n}\r\n\r\n//Verify self close tag name\r\nvar OMITTED_CLOSE_TAGS = {\r\n  'area': true,\r\n  'base': true,\r\n  'br': true,\r\n  'col': true,\r\n  'embed': true,\r\n  'hr': true,\r\n  'img': true,\r\n  'input': true,\r\n  'keygen': true,\r\n  'link': true,\r\n  'meta': true,\r\n  'param': true,\r\n  'source': true,\r\n  'track': true,\r\n  'wbr': true\r\n};\r\nfunction verifySelfCloseTag(tagName) {\r\n  return OMITTED_CLOSE_TAGS[tagName.toLowerCase()];\r\n}\r\n\r\n//Extract parameters inside the xml open tag\r\nfunction getOpenTagParams(obj, noXml) {\r\n  var pattern = /[\\s]+([^\\s=>]+)(=(('[^']+')|(\"[^\"]+\")|([^\"'\\s]+)))?/g,\r\n    matchArr, ret;\r\n\r\n  while ((matchArr = pattern.exec(obj))) {\r\n    var key = matchArr[1];\r\n    if (key === '/' || key === '/>') {  //If match to the last \"/\" or \"/>\", then continue the loop.\r\n      continue;\r\n    }\r\n\r\n    if (!ret) {\r\n      ret = [];\r\n    }\r\n\r\n    var value = matchArr[3],\r\n      charF, len, regex;\r\n    if (value != null) {\r\n      value = tools.clearQuot(value);  //Remove quotation marks\r\n    }\r\n    else {\r\n      value = key;  //Match to Similar to \"checked\" or \"disabled\" attribute.\r\n    }\r\n    len = value.length;\r\n\r\n    //Removed at the end of \"/>\" or \">\".\r\n    if (!noXml) {\r\n      if (value.lastIndexOf('/>') === len - 2) {\r\n        value = value.replace(/\\/>/, '');\r\n      }\r\n      else if (value.lastIndexOf('>') === len - 1) {\r\n        value = value.replace(/>/, '');\r\n      }\r\n    }\r\n\r\n    ret.push({ key: key, value: value });\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//判断xml close tag\r\nfunction isXmlCloseTag(obj, tagName) {\r\n  return tools.isString(obj) && obj.toLowerCase() === '</' + tagName + '>';\r\n}\r\n\r\n//get inside brace param\r\nfunction getInsideBraceParam(obj) {\r\n  return tmplRule.insideBraceParam.exec(obj);\r\n}\r\n\r\n//判断块表达式并返回参数\r\nfunction isExpr(obj) {\r\n  var ret, ret1 = tmplRule.expr.exec(obj);\r\n  if (ret1) {\r\n    ret = [ret1[1]];\r\n\r\n    var ret2 = tmplRule.exprBraceParam.exec(obj);  //提取各参数\r\n    if (ret2) {\r\n      ret.push(ret2[0]);\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//判断块表达式close tag\r\nfunction isExprCloseTag(obj, tagName) {\r\n  return tools.isString(obj) && obj === '/' + tmplRule.exprRule + tagName;\r\n}\r\n\r\n//判断是否模板元素\r\nfunction isTmpl(obj) {\r\n  return obj === 'tmpl';\r\n}\r\n\r\n//加入到模板集合中\r\nfunction addTmpl(node, parent, name) {\r\n  var paramsP = parent.params;\r\n  if (!paramsP) {\r\n    paramsP = parent.params = tools.lightObj();\r\n  }\r\n\r\n  var tmpls = paramsP.tmpls;\r\n  if (!tmpls) {\r\n    var objT = { length: 0 };\r\n    if(name != null) {\r\n      objT[name] = node;\r\n    }\r\n    else {\r\n      objT['0'] = node;\r\n      objT.length = 1;\r\n    }\r\n\r\n    paramsP.tmpls = tranParam.compiledParam(objT);\r\n  }\r\n  else {  //Insert the compiled template to the parameter name for \"tmpls\"'s \"strs\" array.\r\n    var objT = tmpls.strs[0],\r\n      len = objT.length;\r\n\r\n    if(name != null) {\r\n      objT[name] = node;\r\n    }\r\n    else {\r\n      objT[len] = node;\r\n      objT.length = ++len;\r\n    }\r\n  }\r\n}\r\n\r\n//Test whether as parameters expression\r\nfunction isParamsExpr(obj) {\r\n  return obj === 'params' || obj === 'props';\r\n}\r\n\r\n//Add to the \"paramsExpr\" property of the parent node\r\nfunction addParamsExpr(node, parent) {\r\n  if (!parent.paramsExpr) {\r\n    parent.paramsExpr = node;\r\n  }\r\n  else {\r\n    tools.listPush(parent.paramsExpr.content, node.content);\r\n  }\r\n}\r\n\r\nmodule.exports = {\r\n  getXmlOpenTag: getXmlOpenTag,\r\n  isXmlSelfCloseTag: isXmlSelfCloseTag,\r\n  verifySelfCloseTag: verifySelfCloseTag,\r\n  getOpenTagParams: getOpenTagParams,\r\n  isXmlCloseTag: isXmlCloseTag,\r\n  getInsideBraceParam: getInsideBraceParam,\r\n  isExpr: isExpr,\r\n  isExprCloseTag: isExprCloseTag,\r\n  isTmpl: isTmpl,\r\n  addTmpl: addTmpl,\r\n  isParamsExpr: isParamsExpr,\r\n  addParamsExpr: addParamsExpr\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/transforms/transformElement.js\n ** module id = 5\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('../utils/tools'),\r\n  tmplRule = nj.tmplRule;\r\n\r\n//Get compiled parameters from a object\r\nfunction compiledParams(obj) {\r\n  var ret = tools.lightObj();\r\n  tools.each(obj, function (v, k) {\r\n    ret[k] = compiledParam(v);\r\n  }, false, false);\r\n\r\n  return ret;\r\n}\r\n\r\n//Get compiled property\r\nfunction compiledProp(prop, isString) {\r\n  var ret = tools.lightObj();\r\n\r\n  //Extract the dot data path to the 'prop' filter.\r\n  if (!isString && prop.indexOf('.') > -1) {\r\n    prop = prop.replace(/\\.([^\\s.|\\/]+)/g, '|prop($1)');\r\n  }\r\n\r\n  //If there are colons in the property,then use filter\r\n  if (prop.indexOf('|') >= 0) {\r\n    var filters = [],\r\n      filtersTmp;\r\n    filtersTmp = prop.split('|');\r\n    prop = filtersTmp[0].trim();  //Extract property\r\n\r\n    filtersTmp = filtersTmp.slice(1);\r\n    tools.each(filtersTmp, function (filter) {\r\n      var retF = _getFilterParam(filter.trim()),\r\n        filterObj = tools.lightObj(),\r\n        filterName = retF[1].toLowerCase();  //Get filter name\r\n\r\n      if (filterName) {\r\n        var paramsF = retF[3];  //Get filter param\r\n\r\n        //Multiple params are separated by commas.\r\n        if (paramsF) {\r\n          var params = [];\r\n          tools.each(paramsF.split(','), function (p) {\r\n            params[params.length] = tools.clearQuot(p).trim();\r\n          }, false, true);\r\n\r\n          filterObj.params = params;\r\n        }\r\n\r\n        filterObj.name = filterName;\r\n        filters.push(filterObj);\r\n      }\r\n    }, false, true);\r\n\r\n    ret.filters = filters;\r\n  }\r\n\r\n  //Extract the parent data path\r\n  if (!isString && prop.indexOf('../') > -1) {\r\n    var n = 0;\r\n    prop = prop.replace(/\\.\\.\\//g, function () {\r\n      n++;\r\n      return '';\r\n    });\r\n\r\n    ret.parentNum = n;\r\n  }\r\n\r\n  ret.name = prop;\r\n  if (isString) {  //Sign the parameter is a pure string.\r\n    ret.isStr = true;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//Get filter param\r\nvar REGEX_FILTER_PARAM = /([\\w$]+)(\\(([^()]+)\\))*/;\r\nfunction _getFilterParam(obj) {\r\n  return REGEX_FILTER_PARAM.exec(obj);\r\n}\r\n\r\n//Extract replace parameters\r\nvar _quots = ['\\'', '\"'];\r\nfunction _getReplaceParam(obj, strs) {\r\n  var pattern = tmplRule.replaceParam(),\r\n    matchArr, ret, i = 0;\r\n\r\n  while ((matchArr = pattern.exec(obj))) {\r\n    if (!ret) {\r\n      ret = [];\r\n    }\r\n\r\n    var prop = matchArr[3],\r\n      item = [matchArr[0], matchArr[1], null, false, true];\r\n\r\n    if (i > 0) {\r\n      item[4] = false;  //Sign not contain all of placehorder\r\n    }\r\n\r\n    //Clear parameter at both ends of the space.\r\n    prop = prop.trim();\r\n\r\n    //If parameter has quotation marks, this's a pure string parameter.\r\n    if (_quots.indexOf(prop[0]) > -1) {\r\n      prop = tools.clearQuot(prop);  //TODO 此处也会去除过滤器参数的引号\r\n      item[3] = true;\r\n    }\r\n\r\n    item[2] = prop;\r\n    ret.push(item);\r\n    i++;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//Get compiled parameter\r\nfunction compiledParam(value) {\r\n  var ret = tools.lightObj(),\r\n    strs = tools.isString(value) ? value.split(tmplRule.replaceSplit) : [value],\r\n    props = null,\r\n    isAll = false;  //此处指替换符是否占满整个属性值;若无替换符时为false\r\n\r\n  //If have placehorder\r\n  if (strs.length > 1) {\r\n    var params = _getReplaceParam(value, strs);\r\n    props = [];\r\n\r\n    tools.each(params, function (param) {\r\n      var retP = tools.lightObj();\r\n      isAll = param[4] ? param[0] === value : false;  //If there are several curly braces, \"isAll\" must be false.\r\n      retP.prop = compiledProp(param[2], param[3]);\r\n\r\n      //If parameter's open rules are several,then it need escape.\r\n      retP.escape = param[1].split(tmplRule.startRule).length < 3;\r\n      props.push(retP);\r\n    }, false, true);\r\n  }\r\n\r\n  ret.props = props;\r\n  ret.strs = strs;\r\n  ret.isAll = isAll;\r\n\r\n  //标记为模板函数替换变量\r\n  if (isAll) {\r\n    var prop = props[0].prop;\r\n    if (prop.name.indexOf('!#') === 0) {\r\n      prop.name = prop.name.substr(2);\r\n      ret.isTmplPlace = true;\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nmodule.exports = {\r\n  compiledParam: compiledParam,\r\n  compiledParams: compiledParams,\r\n  compiledProp: compiledProp\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/transforms/transformParam.js\n ** module id = 6\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('../utils/tools'),\r\n  errorTitle = nj.errorTitle;\r\n\r\n//提取style内参数\r\nfunction styleProps(obj) {\r\n  //If the parameter is a style object,then direct return.\r\n  if (tools.isObject(obj)) {\r\n    return obj;\r\n  }\r\n\r\n  //参数为字符串\r\n  var pattern = /([^\\s:]+)[\\s]?:[\\s]?([^\\s;]+)[;]?/g,\r\n    matchArr, ret;\r\n\r\n  while ((matchArr = pattern.exec(obj))) {\r\n    var key = matchArr[1],\r\n      value = matchArr[2];\r\n\r\n    if (!ret) {\r\n      ret = {};\r\n    }\r\n\r\n    //Convert to lowercase when style name is all capital.\r\n    if (/^[A-Z-]+$/.test(key)) {\r\n      key = key.toLowerCase();\r\n    }\r\n\r\n    //将连字符转为驼峰命名\r\n    key = tools.toCamelCase(key);\r\n\r\n    ret[key] = value;\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//Get value from multiple datas\r\nfunction getDatasValue(datas, prop) {\r\n  var ret, obj;\r\n  for (var i = 0, l = datas.length; i < l; i++) {\r\n    obj = datas[i];\r\n    if (obj) {\r\n      ret = obj[prop];\r\n      if (ret != null) {\r\n        return ret;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\n//Rebuild data in the new context\r\nfunction getNewData(item, data, isArr, addData) {\r\n  var ret = item;\r\n\r\n  if (isArr == null) {\r\n    isArr = tools.isArray(data);\r\n  }\r\n  if (isArr || addData) {\r\n    ret = tools.listPush([item], !addData ? data.slice(1) : (isArr ? data : [data]));\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\n//Rebuild local variables in the new context\r\nfunction newContextVars(p1, p2, p3) {\r\n  var _parent = p2.parent,\r\n    hasItem = 'item' in p3,\r\n    parent = {\r\n      data: hasItem ? p3.item : _parent.data,\r\n      parent: p3.fallback ? _parent : _parent.parent,\r\n      index: 'index' in p3 ? p3.index : _parent.index\r\n    },\r\n    data = hasItem ? getNewData(p3.item, p2.data, p2.multiData, p3.addData) : p2.data,\r\n    multiData = p3.addData ? true : p2.multiData;\r\n\r\n  return {\r\n    parent: parent,\r\n    data: data,\r\n    multiData: multiData\r\n  }\r\n}\r\n\r\n//修正属性名\r\nfunction fixPropName(name) {\r\n  switch (name) {\r\n    case 'class':\r\n      name = 'className';\r\n      break;\r\n    case 'for':\r\n      name = 'htmlFor';\r\n      break;\r\n  }\r\n\r\n  return name;\r\n}\r\n\r\n//合并字符串属性\r\nfunction assignStringProp(paramsE, keys) {\r\n  var ret = '';\r\n  for (var k in paramsE) {\r\n    if (!keys || !keys[k]) {\r\n      var v = paramsE[k];\r\n      ret += ' ' + k + (k !== v ? '=\"' + v + '\"' : ' ');\r\n    }\r\n  }\r\n  return ret;\r\n}\r\n\r\n//创建块表达式子节点函数\r\nfunction exprRet(p1, p2, fn, p4) {\r\n  return function (param) {\r\n    return fn(p1, p2, param, p4);\r\n  };\r\n}\r\n\r\n//构建可运行的模板函数\r\nfunction tmplWrap(configs, main) {\r\n  return function () {\r\n    var args = arguments,\r\n      len = args.length,\r\n      data;\r\n\r\n    if (len <= 0) {\r\n      data = {};\r\n    }\r\n    else if (len === 1) {\r\n      data = args[0];\r\n    }\r\n    else {\r\n      data = [];\r\n      for (var i = 0; i < len; i++) {\r\n        data[data.length] = args[i];\r\n      }\r\n    }\r\n\r\n    return main(configs, {\r\n      data: data,\r\n      parent: this && this._njParent ? this._njParent : null,\r\n      multiData: tools.isArray(data)\r\n    });\r\n  };\r\n}\r\n\r\n//创建模板函数\r\nfunction template(fns) {\r\n  var configs = {\r\n    useString: fns.useString,\r\n    exprs: nj.exprs,\r\n    filters: nj.filters,\r\n    getDatasValue: nj.getDatasValue,\r\n    noop: nj.noop,\r\n    lightObj: nj.lightObj,\r\n    throwIf: nj.throwIf,\r\n    warn: nj.warn,\r\n    getNewData: nj.getNewData,\r\n    newContextVars: nj.newContextVars,\r\n    styleProps: nj.styleProps,\r\n    exprRet: nj.exprRet\r\n  };\r\n\r\n  if (!configs.useString) {\r\n    configs.h = nj.createElement;\r\n    configs.components = nj.components;\r\n    //configs.assign = nj.assign;\r\n  }\r\n  else {\r\n    configs.assignStringProp = nj.assignStringProp;\r\n    configs.escape = nj.escape;\r\n  }\r\n\r\n  tools.each(fns, function (v, k) {\r\n    if (k.indexOf('main') === 0) {  //将每个主函数构建为可运行的模板函数\r\n      configs[k] = tmplWrap(configs, v);\r\n      configs['_' + k] = v;\r\n    }\r\n    else if (k.indexOf('fn') === 0) {  //块表达式函数\r\n      configs[k] = v;\r\n    }\r\n  }, false, false);\r\n\r\n  return configs;\r\n}\r\n\r\nmodule.exports = {\r\n  getNewData: getNewData,\r\n  newContextVars: newContextVars,\r\n  getDatasValue: getDatasValue,\r\n  fixPropName: fixPropName,\r\n  styleProps: styleProps,\r\n  assignStringProp: assignStringProp,\r\n  exprRet: exprRet,\r\n  tmplWrap: tmplWrap,\r\n  template: template\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/transforms/transformData.js\n ** module id = 7\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar ESCAPE_LOOKUP = {\r\n  '&': '&amp;',\r\n  '>': '&gt;',\r\n  '<': '&lt;',\r\n  '\"': '&quot;',\r\n  '\\'': '&#x27;'\r\n};\r\n\r\nfunction escape(text) {\r\n  if (text == null) {\r\n    return '';\r\n  }\r\n  else if(!text.replace) {\r\n    return text;\r\n  }\r\n\r\n  return text.replace(/[&><\"']/g, function (match) {\r\n    return ESCAPE_LOOKUP[match];\r\n  });\r\n}\r\n\r\nmodule.exports = escape;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/escape.js\n ** module id = 8\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('../utils/tools'),\r\n  tranParam = require('../transforms/transformParam'),\r\n  tranElem = require('../transforms/transformElement'),\r\n  tmplRule = nj.tmplRule;\r\n\r\n//检测元素节点\r\nfunction checkElem(obj, parent) {\r\n  var node = {},\r\n    parentContent = !parent.hasElse ? 'content' : 'contentElse';\r\n\r\n  if (!tools.isArray(obj)) {  //判断是否为文本节点\r\n    if (tools.isObject(obj) && '_njShim' in obj && !tools.isArray(obj._njShim)) {  //Get the shim value\r\n      obj = obj._njShim;\r\n    }\r\n\r\n    node.type = 'nj_plaintext';\r\n    node.content = [tranParam.compiledParam(obj)];\r\n    parent[parentContent].push(node);\r\n    return;\r\n  }\r\n\r\n  var first = obj[0];\r\n  if (tools.isString(first)) {  //第一个子节点为字符串\r\n    var first = first,\r\n      len = obj.length,\r\n      last = obj[len - 1],\r\n      isElemNode = false,\r\n      expr,\r\n      exprParams;\r\n\r\n    //判断是否为xml标签\r\n    var openTagName,\r\n      hasCloseTag = false,\r\n      isTmpl, isParamsExpr;\r\n    \r\n    expr = tranElem.isExpr(first);\r\n    if (!expr) {\r\n      var xmlOpenTag = tranElem.getXmlOpenTag(first);\r\n      if (xmlOpenTag) {  //tagname为xml标签时,则认为是元素节点\r\n        openTagName = xmlOpenTag[1];\r\n        \r\n        if (!tranElem.isXmlSelfCloseTag(first)) {  //非自闭合标签才验证是否存在关闭标签\r\n          hasCloseTag = tranElem.isXmlCloseTag(last, openTagName);\r\n        }\r\n        else {  //自闭合标签\r\n          node.selfCloseTag = true;\r\n        }\r\n        isElemNode = true;\r\n      }\r\n    }\r\n    else {  //为块表达式,也可视为一个元素节点\r\n      var exprName = expr[0].toLowerCase();\r\n      exprParams = expr[1];\r\n      isTmpl = tranElem.isTmpl(exprName);\r\n      isParamsExpr = tranElem.isParamsExpr(exprName);\r\n\r\n      node.type = 'nj_expr';\r\n      node.expr = exprName;\r\n      if (exprParams != null && !isTmpl) {\r\n        node.refer = tranParam.compiledParam(exprParams);\r\n      }\r\n\r\n      if (tranElem.isExprCloseTag(last, exprName)) {  //判断是否有块表达式闭合标签\r\n        hasCloseTag = true;\r\n      }\r\n      isElemNode = true;\r\n    }\r\n\r\n    if (isElemNode) {  //判断是否为元素节点\r\n      var elseIndex = -1,\r\n        pushContent = true;\r\n\r\n      if (!expr) {\r\n        node.type = openTagName;\r\n\r\n        //If open tag has a brace,add the typeRefer param.\r\n        var typeRefer = tranElem.getInsideBraceParam(openTagName);\r\n        if (typeRefer) {\r\n          node.typeRefer = tranParam.compiledParam(typeRefer[0]);\r\n        }\r\n\r\n        //获取openTag内参数\r\n        var tagParams = tranElem.getOpenTagParams(first);\r\n        if (tagParams) {\r\n          if (!node.params) {\r\n            node.params = tools.lightObj();\r\n          }\r\n\r\n          tools.each(tagParams, function (param) {\r\n            node.params[param.key] = tranParam.compiledParam(param.value);\r\n          }, false, true);\r\n        }\r\n\r\n        //Verify if self closing tag again, because the tag may be similar to \"<br></br>\".\r\n        if (!node.selfCloseTag) {\r\n          node.selfCloseTag = tranElem.verifySelfCloseTag(openTagName);\r\n        }\r\n      }\r\n      else {  //为块表达式时判断是否有$else\r\n        if (isTmpl) {  //模板元素\r\n          pushContent = false;\r\n          var retR = tranElem.getInsideBraceParam(exprParams);\r\n\r\n          //将模板添加到父节点的params中\r\n          tranElem.addTmpl(node, parent, retR ? tools.clearQuot(retR[1]) : null);\r\n        }\r\n        else if (isParamsExpr) {\r\n          pushContent = false;\r\n        }\r\n        else {\r\n          elseIndex = obj.indexOf(tmplRule.exprRule + 'else');\r\n        }\r\n      }\r\n\r\n      //放入父节点content内\r\n      if (pushContent) {\r\n        parent[parentContent].push(node);\r\n      }\r\n\r\n      //取出子节点集合\r\n      var end = len - (hasCloseTag ? 1 : 0),\r\n        content = obj.slice(1, (elseIndex < 0 ? end : elseIndex));\r\n      if (content && content.length) {\r\n        checkContentElem(content, node);\r\n      }\r\n\r\n      //如果有$else,则将$else后面的部分存入content_else集合中\r\n      if (elseIndex >= 0) {\r\n        var contentElse = obj.slice(elseIndex + 1, end);\r\n        node.hasElse = true;\r\n\r\n        if (contentElse && contentElse.length) {\r\n          checkContentElem(contentElse, node);\r\n        }\r\n      }\r\n\r\n      //If this is params block, set on the \"paramsExpr\" property of the parent node.\r\n      if (isParamsExpr) {\r\n        tranElem.addParamsExpr(node, parent);\r\n      }\r\n    }\r\n    else {  //如果不是元素节点,则为节点集合\r\n      checkContentElem(obj, parent);\r\n    }\r\n  }\r\n  else if (tools.isArray(first)) {  //如果第一个子节点为数组,则该节点一定为节点集合(可以是多层数组嵌套的集合)\r\n    checkContentElem(obj, parent);\r\n  }\r\n}\r\n\r\n//检测子元素节点\r\nfunction checkContentElem(obj, parent) {\r\n  if (!parent.content) {\r\n    parent.content = [];\r\n  }\r\n  if (parent.hasElse && !parent.contentElse) {\r\n    parent.contentElse = [];\r\n  }\r\n\r\n  tools.each(obj, function (item) {\r\n    checkElem(item, parent);\r\n  }, false, true);\r\n}\r\n\r\nmodule.exports = {\r\n  checkElem: checkElem\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/parser/checkElem.js\n ** module id = 9\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('./tools');\r\n\r\n//注册组件\r\nfunction registerComponent(name, component) {\r\n  var params = name;\r\n  if (!tools.isObject(name)) {\r\n    params = {};\r\n    params[name] = component;\r\n  }\r\n\r\n  tools.each(params, function (v, k) {\r\n    nj.components[k.toLowerCase()] = v;\r\n  }, false, false);\r\n\r\n  return component;\r\n}\r\n\r\nmodule.exports = {\r\n  registerComponent: registerComponent\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/registerComponent.js\n ** module id = 10\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar tools = require('../utils/tools');\r\n\r\n//Global filter list\r\nvar filters = {\r\n  //Get param properties\r\n  prop: function (obj, props) {\r\n    var ret = obj;\r\n    ret && tools.each(props.split('.'), function (p) {\r\n      ret = ret[p];\r\n    }, false, true);\r\n\r\n    return ret;\r\n  },\r\n\r\n  //Get list count\r\n  count: function (obj) {\r\n    return obj ? obj.length : 0;\r\n  },\r\n\r\n  //Get list item\r\n  item: function (obj, no) {\r\n    return obj ? obj[no] : null;\r\n  },\r\n\r\n  //Judge equal\r\n  equal: function (obj, val) {\r\n    return obj == val;\r\n  },\r\n\r\n  //Less than\r\n  lt: function (val1, val2, noEqual) {\r\n    var ret;\r\n    val1 = parseFloat(val1);\r\n    val2 = parseFloat(val2);\r\n\r\n    if (noEqual) {\r\n      ret = val1 < val2;\r\n    }\r\n    else {\r\n      ret = val1 <= val2;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  //Greater than\r\n  gt: function (val1, val2, noEqual) {\r\n    var ret;\r\n    val1 = parseFloat(val1);\r\n    val2 = parseFloat(val2);\r\n\r\n    if (noEqual) {\r\n      ret = val1 > val2;\r\n    }\r\n    else {\r\n      ret = val1 >= val2;\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  //Addition\r\n  add: function (val1, val2, isFloat) {\r\n    return val1 + (isFloat ? parseFloat(val2) : parseInt(val2, 10));\r\n  },\r\n\r\n  //Convert to int \r\n  int: function (val) {\r\n    return parseInt(val, 10);\r\n  },\r\n\r\n  //Convert to float \r\n  float: function (val) {\r\n    return parseFloat(val);\r\n  },\r\n\r\n  //Convert to boolean \r\n  bool: function (val) {\r\n    if (val === 'false') {\r\n      return false;\r\n    }\r\n\r\n    return Boolean(val);\r\n  }\r\n};\r\n\r\nfunction _commonConfig(params) {\r\n  var ret = {\r\n    data: true,\r\n    parent: true,\r\n    index: true,\r\n    useString: true\r\n  };\r\n\r\n  if (params) {\r\n    ret = tools.assign(ret, params);\r\n  }\r\n  return ret;\r\n}\r\n\r\n//Filter default config\r\nvar _defaultConfig = { data: false, parent: false, index: false },\r\n  filterConfig = {\r\n    prop: _commonConfig(_defaultConfig),\r\n    count: _commonConfig(_defaultConfig),\r\n    item: _commonConfig(_defaultConfig),\r\n    equal: _commonConfig(_defaultConfig),\r\n    lt: _commonConfig(_defaultConfig),\r\n    gt: _commonConfig(_defaultConfig),\r\n    add: _commonConfig(_defaultConfig),\r\n    int: _commonConfig(_defaultConfig),\r\n    float: _commonConfig(_defaultConfig),\r\n    bool: _commonConfig(_defaultConfig)\r\n  };\r\n\r\n//Register filter and also can batch add\r\nfunction registerFilter(name, filter, options) {\r\n  var params = name;\r\n  if (!tools.isObject(name)) {\r\n    params = {};\r\n    params[name] = {\r\n      filter: filter,\r\n      options: options\r\n    };\r\n  }\r\n\r\n  tools.each(params, function (v, k) {\r\n    var name = k.toLowerCase();\r\n    if (v) {\r\n      var filter = v.filter,\r\n        options = v.options;\r\n\r\n      if (filter || options) {\r\n        if (filter) {\r\n          filters[name] = filter;\r\n        }\r\n        if (options) {\r\n          filterConfig[name] = _commonConfig(options);\r\n        }\r\n      }\r\n      else {\r\n        filters[name] = v;\r\n      }\r\n    }\r\n  }, false, false);\r\n}\r\n\r\nmodule.exports = {\r\n  filters: filters,\r\n  filterConfig: filterConfig,\r\n  registerFilter: registerFilter\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/filter.js\n ** module id = 11\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar tools = require('../utils/tools');\r\n\r\n//Global expression list\r\nvar exprs = {\r\n  'if': function (refer, useUnless) {\r\n    if (refer === 'false') {\r\n      refer = false;\r\n    }\r\n\r\n    var referR, ret;\r\n    if (!useUnless) {\r\n      referR = !!refer;\r\n    }\r\n    else {\r\n      referR = !!!refer;\r\n    }\r\n    if (referR) {\r\n      ret = this.result();\r\n    }\r\n    else {\r\n      ret = this.inverse();\r\n    }\r\n\r\n    if (this.useString && ret == null) {\r\n      return '';\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  unless: function (refer) {\r\n    return exprs['if'].call(this, refer, true);\r\n  },\r\n\r\n  each: function (refer) {\r\n    var thiz = this,\r\n      useString = thiz.useString,\r\n      ret;\r\n\r\n    if (refer) {\r\n      if (useString) {\r\n        ret = '';\r\n      }\r\n      else {\r\n        ret = [];\r\n      }\r\n\r\n      tools.each(refer, function (item, index) {\r\n        var retI = thiz.result({\r\n          item: item,\r\n          index: index,\r\n          fallback: true\r\n        });\r\n\r\n        if (useString) {\r\n          ret += retI;\r\n        }\r\n        else {\r\n          ret.push(retI);\r\n        }\r\n      }, false, tools.isArrayLike(refer));\r\n\r\n      //Return null when not use string and result is empty.\r\n      if (!useString && !ret.length) {\r\n        ret = null;\r\n      }\r\n    }\r\n    else {\r\n      ret = thiz.inverse();\r\n      if (useString && ret == null) {\r\n        ret = '';\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  //Parameter\r\n  param: function () {\r\n    var ret = this.result(),  //Get parameter value\r\n      name = '',\r\n      value;\r\n\r\n    //Make property name by multiple parameters\r\n    tools.each(arguments, function (item, i) {\r\n      name += item;\r\n    }, false, true);\r\n\r\n    //If the value length greater than 1, it need to be connected to a whole string.\r\n    if (ret != null) {\r\n      if (!tools.isArray(ret)) {\r\n        value = ret;\r\n      }\r\n      else {\r\n        value = '';\r\n        tools.each(tools.flatten(ret), function (item) {\r\n          value += item != null ? item : '';\r\n        }, false, true);\r\n      }\r\n    }\r\n    else {  //Match to Similar to \"checked\" or \"disabled\" attribute.\r\n      value = !this.useString ? true : name;\r\n    }\r\n\r\n    this.paramsExpr[name] = value;\r\n  },\r\n\r\n  //Spread parameters\r\n  spreadparam: function (refer) {\r\n    if (!refer) {\r\n      return;\r\n    }\r\n\r\n    var thiz = this;\r\n    tools.each(refer, function (v, k) {\r\n      thiz.paramsExpr[k] = v;\r\n    }, false, false);\r\n  },\r\n\r\n  equal: function (value1, value2) {\r\n    var ret;\r\n    if (value1 == value2) {\r\n      ret = this.result();\r\n    }\r\n    else {\r\n      ret = this.inverse();\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  'for': function (start, end) {\r\n    var ret, useString = this.useString;\r\n    if (useString) {\r\n      ret = '';\r\n    }\r\n    else {\r\n      ret = [];\r\n    }\r\n\r\n    if (end == null) {\r\n      end = start;\r\n      start = 0;\r\n    }\r\n    start = parseInt(start, 10);\r\n    end = parseInt(end, 10);\r\n\r\n    for (; start <= end; start++) {\r\n      var retI = this.result({\r\n        index: start\r\n      });\r\n\r\n      if (useString) {\r\n        ret += retI;\r\n      }\r\n      else {\r\n        ret.push(retI);\r\n      }\r\n    }\r\n\r\n    return ret;\r\n  },\r\n\r\n  blank: function () {\r\n    return this.result();\r\n  }\r\n};\r\n\r\nfunction _commonConfig(params) {\r\n  var ret = {\r\n    data: true,\r\n    parent: true,\r\n    index: true,\r\n    useString: true,\r\n    paramsExpr: false,\r\n    result: true,\r\n    inverse: true,\r\n    newContext: false\r\n  };\r\n\r\n  if (params) {\r\n    ret = tools.assign(ret, params);\r\n  }\r\n  return ret;\r\n}\r\n\r\n//Expression default config\r\nvar _defaultConfig = { data: false, parent: false, index: false },\r\n  exprConfig = {\r\n    'if': _commonConfig(_defaultConfig),\r\n    unless: _commonConfig(_defaultConfig),\r\n    each: _commonConfig(tools.assign({ newContext: true }, _defaultConfig)),\r\n    param: _commonConfig(tools.assign({ inverse: false, paramsExpr: true }, _defaultConfig)),\r\n    spreadparam: _commonConfig(tools.assign({ useString: false, result: false, inverse: false, paramsExpr: true }, _defaultConfig)),\r\n    equal: _commonConfig(tools.assign({ useString: false }, _defaultConfig)),\r\n    'for': _commonConfig(tools.assign({ newContext: true }, _defaultConfig, { data: true })),\r\n    blank: _commonConfig(tools.assign({ useString: false, inverse: false }, _defaultConfig))\r\n  };\r\n\r\n//Expression alias\r\nexprs.prop = exprs.p = exprs.param;\r\nexprConfig.prop = exprConfig.p = exprConfig.param;\r\nexprs.spread = exprs.spreadparam;\r\nexprConfig.spread = exprConfig.spreadparam;\r\n\r\n//Register expression and also can batch add\r\nfunction registerExpr(name, expr, options) {\r\n  var params = name;\r\n  if (!tools.isObject(name)) {\r\n    params = {};\r\n    params[name] = {\r\n      expr: expr,\r\n      options: options\r\n    };\r\n  }\r\n\r\n  tools.each(params, function (v, k) {\r\n    var name = k.toLowerCase();\r\n    if (v) {\r\n      var expr = v.expr,\r\n        options = v.options;\r\n\r\n      if (expr || options) {\r\n        if(expr) {\r\n          exprs[name] = expr;\r\n        }\r\n        if(options) {\r\n          exprConfig[name] = _commonConfig(options);\r\n        }\r\n      }\r\n      else {\r\n        exprs[name] = v;\r\n      }\r\n    }\r\n  }, false, false);\r\n}\r\n\r\nmodule.exports = {\r\n  exprs: exprs,\r\n  exprConfig: exprConfig,\r\n  registerExpr: registerExpr\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/helpers/expression.js\n ** module id = 12\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('./tools');\r\n\r\nfunction _createRegExp(reg, mode) {\r\n  return new RegExp(reg, mode);\r\n}\r\n\r\n//Clear the repeated characters\r\nfunction _clearRepeat(str) {\r\n  var ret = '',\r\n    i = 0,\r\n    l = str.length,\r\n    char;\r\n\r\n  for (; i < l; i++) {\r\n    char = str[i];\r\n    if (ret.indexOf(char) < 0) {\r\n      ret += char;\r\n    }\r\n  }\r\n\r\n  return ret;\r\n}\r\n\r\nmodule.exports = function (startRule, endRule, exprRule, externalRule, propRule, templateRule) {\r\n  if(tools.isObject(startRule)){\r\n    var params = startRule;\r\n    startRule = params.start;\r\n    endRule = params.end;\r\n    exprRule = params.expr;\r\n    externalRule = params.external;\r\n    propRule = params.prop;\r\n    templateRule = params.template;\r\n  }\r\n  if (!startRule) {\r\n    startRule = '{';\r\n  }\r\n  if (!endRule) {\r\n    endRule = '}';\r\n  }\r\n  if (!exprRule) {\r\n    exprRule = '#';\r\n  }\r\n  if (!externalRule) {\r\n    externalRule = '$';\r\n  }\r\n  if (!propRule) {\r\n    propRule = '@';\r\n  }\r\n  if (!templateRule) {\r\n    templateRule = 'template';\r\n  }\r\n\r\n  var allRules = _clearRepeat(startRule + endRule),\r\n    firstChar = startRule[0],\r\n    otherChars = allRules.substr(1),\r\n    spChars = '#$@',\r\n    exprRules = _clearRepeat(exprRule + spChars),\r\n    escapeExprRule = exprRule.replace(/\\$/g, '\\\\$'),\r\n    escapeExternalRule = externalRule.replace(/\\$/g, '\\\\$');\r\n\r\n  //Reset the regexs to global list\r\n  tools.assign(nj.tmplRule, {\r\n    startRule: startRule,\r\n    endRule: endRule,\r\n    exprRule: exprRule,\r\n    externalRule: externalRule,\r\n    propRule: propRule,\r\n    xmlOpenTag: _createRegExp('^<([a-z' + firstChar + exprRules + '][-a-z0-9_|./' + otherChars + ']*)[^>]*>$', 'i'),\r\n    insideBraceParam: _createRegExp(startRule + '([^' + allRules + ']+)' + endRule, 'i'),\r\n    exprBraceParam: _createRegExp('([\\\\s]+(' + startRule + '){1,2}[^' + allRules + ']+(' + endRule + '){1,2})+', 'i'),\r\n    replaceBraceParam: function() {\r\n      return _createRegExp('[\\\\s]+(' + startRule + '){1,2}([^' + allRules + ']+)(' + endRule + '){1,2}', 'g')\r\n    },\r\n    replaceSplit: _createRegExp('(?:' + startRule + '){1,2}[^' + allRules + ']+(?:' + endRule + '){1,2}'),\r\n    replaceParam: function() {\r\n      return _createRegExp('((' + startRule + '){1,2})([^' + allRules + ']+)(' + endRule + '){1,2}', 'g');\r\n    },\r\n    checkElem: function() {\r\n      return _createRegExp('([^>]*)(<([a-z' + firstChar + '/' + exprRules + '!][-a-z0-9_|.' + allRules + exprRules + ']*)[^>]*>)([^<]*)', 'ig');\r\n    },\r\n    externalSplit: _createRegExp(escapeExternalRule + '\\\\{[^{}]*(?:\\\\{[^' + externalRule + ']*\\\\})*[^{}]*\\\\}'),\r\n    external: function() {\r\n      return _createRegExp(escapeExternalRule + '\\\\{([^{}]*(\\\\{[^' + externalRule + ']*\\\\})*[^{}]*)\\\\}', 'g');\r\n    },\r\n    expr: _createRegExp('^' + escapeExprRule + '([^\\\\s]+)', 'i'),\r\n    include: function() {\r\n      return _createRegExp('<' + escapeExprRule + 'include([^>]*)>', 'ig');\r\n    },\r\n    template: templateRule\r\n  });\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/setTmplRule.js\n ** module id = 13\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  utils = require('../utils/utils'),\r\n  buildRuntime = require('./buildRuntime'),\r\n  compileStringTmpl = require('../parser/checkStringElem');\r\n\r\n//编译模板并返回转换函数\r\nfunction compile(tmpl, tmplName, outputH, fileName) {\r\n  if (!tmpl) {\r\n    return;\r\n  }\r\n  if (utils.isObject(tmplName)) {\r\n    var params = tmplName;\r\n    tmplName = params.tmplName;\r\n    outputH = params.outputH;\r\n    fileName = params.fileName;\r\n  }\r\n\r\n  //编译模板函数\r\n  var tmplFns;\r\n  if (tmplName) {\r\n    tmplFns = nj.templates[tmplName];\r\n  }\r\n  if (!tmplFns) {\r\n    var isObj = utils.isObject(tmpl), fns;\r\n    if (isObj && tmpl.main) {  //直接传入预编译模板\r\n      fns = tmpl;\r\n    }\r\n    else {  //编译AST\r\n      var root;\r\n      if (tmplName) {\r\n        root = nj.asts[tmplName];\r\n      }\r\n      if (!root) {\r\n        //Can be directly introduced into the AST\r\n        if (isObj && tmpl.type === 'nj_root') {\r\n          root = tmpl;\r\n        }\r\n        else {\r\n          root = _createAstRoot();\r\n\r\n          //Auto transform string template to array\r\n          if (utils.isString(tmpl)) {\r\n            //Merge all include blocks\r\n            var includeParser = nj.includeParser;\r\n            if (includeParser) {\r\n              tmpl = includeParser(tmpl, fileName);\r\n            }\r\n\r\n            tmpl = compileStringTmpl(tmpl);\r\n          }\r\n\r\n          //分析传入参数并转换为节点树对象\r\n          utils.checkElem(tmpl, root);\r\n        }\r\n\r\n        //保存模板AST编译结果到全局集合中\r\n        if (tmplName) {\r\n          nj.asts[tmplName] = root;\r\n        }\r\n      }\r\n\r\n      fns = buildRuntime(root.content, !outputH);\r\n    }\r\n\r\n    tmplFns = utils.template(fns);\r\n\r\n    //保存模板函数编译结果到全局集合中\r\n    if (tmplName) {\r\n      nj.templates[tmplName] = tmplFns;\r\n    }\r\n  }\r\n\r\n  return tmplFns.main;\r\n}\r\n\r\n//Create template root object\r\nfunction _createAstRoot() {\r\n  var root = utils.lightObj();\r\n  root.type = 'nj_root';\r\n  root.content = [];\r\n\r\n  return root;\r\n}\r\n\r\n//编译字面量并返回组件转换函数\r\nfunction compileH(tmpl, tmplName) {\r\n  return compile(tmpl, tmplName, true);\r\n}\r\n\r\n//Precompile template\r\nfunction precompile(tmpl, outputH) {\r\n  var root = _createAstRoot();\r\n\r\n  if (utils.isString(tmpl)) {\r\n    tmpl = compileStringTmpl(tmpl);\r\n  }\r\n  utils.checkElem(tmpl, root);\r\n\r\n  return buildRuntime(root.content, !outputH);\r\n}\r\n\r\nmodule.exports = {\r\n  compile: compile,\r\n  compileH: compileH,\r\n  precompile: precompile\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/compiler/compile.js\n ** module id = 14\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  utils = require('../utils/utils'),\r\n  errorTitle = nj.errorTitle,\r\n  exprConfig = utils.exprConfig,\r\n  filterConfig = utils.filterConfig,\r\n  replaceSpecialSymbol = require('../utils/replaceSpecialSymbol');\r\n\r\nfunction _buildFn(content, fns, no, newContext, level) {\r\n  var fnStr = '',\r\n    useString = fns.useString,\r\n    isTmplExpr = utils.isString(no),  //如果no为字符串, 则本次将构建tmpl块模板函数\r\n    main = isTmplExpr || no === 0,\r\n    /* retType\r\n     1: 只有单个子节点\r\n     2: 有多个子节点\r\n     object: 非构建函数时\r\n    */\r\n    retType = content.length === 1 ? '1' : '2',\r\n    counter = {\r\n      _type: 0,\r\n      _typeRefer: 0,\r\n      _params: 0,\r\n      _paramsE: 0,\r\n      _compParam: 0,\r\n      _dataRefer: 0,\r\n      _expr: 0,\r\n      _this: 0,\r\n      _value: 0,\r\n      _filter: 0,\r\n      _thisF: 0,\r\n      newContext: newContext\r\n    };\r\n\r\n  if (!useString) {\r\n    counter._compParam = 0;\r\n  }\r\n  else {\r\n    counter._children = 0;\r\n  }\r\n\r\n  if (main) {\r\n    fnStr += _buildVar();\r\n    fnStr += 'if(!parent) {\\n';\r\n    fnStr += '  if (data) parent = { data: multiData ? data[0] : data };\\n';\r\n    fnStr += '  else parent = {};\\n';\r\n    fnStr += '  p2.parent = parent;\\n';\r\n    fnStr += '};\\n';\r\n  }\r\n  else if (newContext) {\r\n    fnStr += 'var _p2 = p1.newContextVars(p1, p2, p3),\\n';\r\n    fnStr += '  parent = _p2.parent,\\n';\r\n    fnStr += '  data = _p2.data,\\n';\r\n    fnStr += '  multiData = _p2.multiData;\\n';\r\n  }\r\n  else {\r\n    fnStr += _buildVar();\r\n  }\r\n\r\n  if (retType === '2') {\r\n    if (!useString) {\r\n      fnStr += 'var ret = [];\\n';\r\n    }\r\n    else {\r\n      fnStr += 'var ret = \\'\\';\\n';\r\n    }\r\n  }\r\n\r\n  fnStr += _buildContent(content, fns, counter, retType, level);\r\n\r\n  if (retType === '2') {\r\n    fnStr += 'return ret;';\r\n  }\r\n\r\n  /* 构建块表达式函数\r\n   p1: 全局模板数据\r\n   p2: 当前模板数据\r\n   p3: 块表达式内调用result及inverse方法传递的参数\r\n   p4: #props块变量\r\n  */\r\n  fns[main ? 'main' + (isTmplExpr ? no : '') : 'fn' + no] = new Function('p1', 'p2', 'p3', 'p4', fnStr);\r\n  return no;\r\n}\r\n\r\nfunction _buildVar() {\r\n  return ('var parent = p2.parent,\\n'\r\n    + '  data = p2.data,\\n'\r\n    + '  multiData = p2.multiData;\\n');\r\n}\r\n\r\nfunction _buildPropData(obj, counter, fns, noEscape) {\r\n  var dataValueStr,\r\n    useString = fns.useString,\r\n    escape = !noEscape ? obj.escape : false;\r\n\r\n  //先生成数据值\r\n  if (!obj.prop.isStr) {\r\n    var name = obj.prop.name,\r\n      parentNum = obj.prop.parentNum,\r\n      data = '',\r\n      special = false;\r\n\r\n    if (name === '#') {\r\n      data = 'parent.index';\r\n      special = true;\r\n    }\r\n    else if (name === '.') {\r\n      data = 'parent.data';\r\n      special = true;\r\n    }\r\n\r\n    if (parentNum) {\r\n      if (!data) {\r\n        data = 'parent.data';\r\n      }\r\n      for (var i = 0; i < parentNum; i++) {\r\n        data = 'parent.' + data;\r\n      }\r\n\r\n      if (!special) {\r\n        data += '[\\'' + name + '\\']';\r\n        special = true;\r\n      }\r\n    }\r\n\r\n    if (!special) {\r\n      dataValueStr = '(!multiData ? data[\\'' + name + '\\'] : p1.getDatasValue(data, \\'' + name + '\\'))';\r\n    }\r\n    else {\r\n      dataValueStr = data;\r\n    }\r\n  }\r\n  else {\r\n    dataValueStr = '\\'' + obj.prop.name + '\\'';\r\n  }\r\n\r\n  //有过滤器时需要生成\"_value\"值\r\n  var filters = obj.prop.filters;\r\n  if (filters) {\r\n    var valueStr = '_value' + counter._value++,\r\n      filterStr = 'var ' + valueStr + ' = ' + dataValueStr + ';\\n';\r\n\r\n    utils.each(filters, function (o) {\r\n      var _filterC = counter._filter++,\r\n        _thisFC = counter._thisF++,\r\n        configF = filterConfig[o.name],\r\n        noConfig = !configF;\r\n\r\n      filterStr += '\\nvar _filter' + _filterC + ' = p1.filters[\\'' + o.name + '\\'];\\n';\r\n      filterStr += 'if (!_filter' + _filterC + ') {\\n';\r\n      filterStr += '  p1.warn(\\'' + o.name + '\\', \\'filter\\');\\n';\r\n      filterStr += '}\\n';\r\n      filterStr += 'else {\\n';\r\n      filterStr += '  var _thisF' + _thisFC + ' = p1.lightObj();\\n';\r\n      if (noConfig || configF.useString) {\r\n        filterStr += '  _thisF' + _thisFC + '.useString = p1.useString;\\n';\r\n      }\r\n      if (noConfig || configF.data) {\r\n        filterStr += '  _thisF' + _thisFC + '.data = parent.data;\\n';\r\n      }\r\n      if (noConfig || configF.parent) {\r\n        filterStr += '  _thisF' + _thisFC + '.parent = parent.parent;\\n';\r\n      }\r\n      if (noConfig || configF.index) {\r\n        filterStr += '  _thisF' + _thisFC + '.index = parent.index;\\n';\r\n      }\r\n      filterStr += '\\n  ' + valueStr + ' = _filter' + _filterC + '.apply(_thisF' + _thisFC + ', [' + valueStr\r\n        + (o.params ? o.params.reduce(function (p, c) {\r\n          return p + ', \\'' + c + '\\'';\r\n        }, '') : '')\r\n        + ']);\\n';\r\n      filterStr += '}\\n';\r\n    }, false, true);\r\n\r\n    return {\r\n      valueStr: _buildEscape(valueStr, useString, escape),\r\n      filterStr: filterStr\r\n    };\r\n  }\r\n  else {\r\n    return _buildEscape(dataValueStr, useString, escape);\r\n  }\r\n}\r\n\r\nfunction _buildEscape(valueStr, useString, escape) {\r\n  if (useString && escape) {\r\n    return 'p1.escape(' + valueStr + ')';\r\n  }\r\n  else {\r\n    return valueStr;\r\n  }\r\n}\r\n\r\nfunction _buildProps(obj, counter, fns) {\r\n  var str0 = obj.strs[0],\r\n    valueStr = '',\r\n    filterStr = '';\r\n\r\n  if (utils.isString(str0)) {  //常规属性\r\n    valueStr = !obj.isAll && str0 !== '' ? ('\\'' + str0 + '\\'') : '';\r\n    filterStr = '';\r\n\r\n    utils.each(obj.props, function (o, i) {\r\n      var propData = _buildPropData(o, counter, fns),\r\n        dataValueStr;\r\n      if (utils.isString(propData)) {\r\n        dataValueStr = propData;\r\n      }\r\n      else {\r\n        dataValueStr = propData.valueStr;\r\n        filterStr += propData.filterStr;\r\n      }\r\n\r\n      if (!obj.isAll) {\r\n        var strI = obj.strs[i + 1];\r\n        dataValueStr = (str0 === '' && i == 0 ? '' : ' + ')\r\n          + '(' + dataValueStr + ')'\r\n          + (strI !== '' ? ' + \\'' + strI + '\\'' : '');\r\n      }\r\n      else if (obj.isTmplPlace) {  //执行tmpl块模板函数\r\n        dataValueStr += '.call({ _njParent: parent }, data)';\r\n      }\r\n\r\n      valueStr += dataValueStr;\r\n      if (obj.isAll) {\r\n        return false;\r\n      }\r\n    }, false, true);\r\n  }\r\n  else if (utils.isObject(str0) && str0.length != null) {  //tmpl块表达式\r\n    valueStr += '{\\n';\r\n    utils.each(str0, function (v, k, i, l) {\r\n      if (k !== 'length') {\r\n        valueStr += '  \"' + k + '\": p1.main' + _buildFn(v.content, fns, 'T' + ++fns._noT);\r\n      }\r\n      else {\r\n        valueStr += '  length: ' + v;\r\n      }\r\n      if (i < l - 1) {\r\n        valueStr += ',';\r\n      }\r\n      valueStr += '\\n';\r\n    }, false, false);\r\n    valueStr += '}';\r\n  }\r\n  else if (utils.isObject(str0) && str0._njEx) {\r\n    valueStr = str0._njEx;\r\n  }\r\n  else {  //非字符串值\r\n    //The \"_njShim\" property is used to distinguish whether the incoming is an normal array.\r\n    valueStr = JSON.stringify(str0._njShim ? str0._njShim : str0);\r\n  }\r\n\r\n  if (filterStr === '') {\r\n    return valueStr;\r\n  }\r\n  else {  //包含过滤器\r\n    return {\r\n      valueStr: valueStr,\r\n      filterStr: filterStr\r\n    };\r\n  }\r\n}\r\n\r\nfunction _buildNode(node, fns, counter, retType, level) {\r\n  var fnStr = '',\r\n    useString = fns.useString;\r\n\r\n  if (node.type === 'nj_plaintext') {  //文本节点\r\n    var valueStr = _buildProps(node.content[0], counter, fns),\r\n      filterStr;\r\n    if (utils.isObject(valueStr)) {\r\n      filterStr = valueStr.filterStr;\r\n      valueStr = valueStr.valueStr;\r\n    }\r\n\r\n    var textStr = _buildRender(1, retType, { text: valueStr }, fns, level);\r\n    if (filterStr) {\r\n      textStr = filterStr + textStr;\r\n    }\r\n\r\n    if (useString) {\r\n      fnStr += textStr;\r\n    }\r\n    else {  //文本中的特殊字符需转义\r\n      fnStr += replaceSpecialSymbol(textStr);\r\n    }\r\n  }\r\n  else if (node.type === 'nj_expr') {  //块表达式节点\r\n    var _exprC = counter._expr++,\r\n      _dataReferC = counter._dataRefer++,\r\n      dataReferStr = '';\r\n    fnStr += '\\nvar _expr' + _exprC + ' = p1.exprs[\\'' + node.expr + '\\'];\\n';\r\n\r\n    if (node.refer) {\r\n      dataReferStr += 'var _dataRefer' + _dataReferC + ' = [\\n';\r\n      var props = node.refer.props,\r\n        len = props.length,\r\n        filterStr = '';\r\n\r\n      utils.each(props, function (o, i) {\r\n        var valueStr = _buildPropData(o, counter, fns, true);\r\n        if (utils.isObject(valueStr)) {\r\n          filterStr += valueStr.filterStr;\r\n          valueStr = valueStr.valueStr;\r\n        }\r\n\r\n        dataReferStr += '  ' + valueStr + (i < len - 1 ? ',' : '');\r\n      }, false, true);\r\n      dataReferStr += '\\n];\\n';\r\n\r\n      if (filterStr !== '') {\r\n        dataReferStr = filterStr + dataReferStr;\r\n      }\r\n\r\n      fnStr += dataReferStr;\r\n    }\r\n\r\n    //如果表达式不存在则打印警告信息\r\n    fnStr += 'p1.throwIf(_expr' + _exprC + ', \\'' + node.expr + '\\', \\'expr\\');\\n';\r\n\r\n    //执行表达式块\r\n    var _thisC = counter._this++,\r\n      configE = exprConfig[node.expr],\r\n      noConfig = !configE,\r\n      newContext = configE ? configE.newContext : false,\r\n      newContextP = counter.newContext;\r\n\r\n    fnStr += '\\nvar _this' + _thisC + ' = p1.lightObj();\\n';\r\n    if (noConfig || configE.useString) {\r\n      fnStr += '_this' + _thisC + '.useString = p1.useString;\\n';\r\n    }\r\n    if (noConfig || configE.data) {\r\n      fnStr += '_this' + _thisC + '.data = parent.data;\\n';\r\n    }\r\n    if (noConfig || configE.parent) {\r\n      fnStr += '_this' + _thisC + '.parent = parent.parent;\\n';\r\n    }\r\n    if (noConfig || configE.index) {\r\n      fnStr += '_this' + _thisC + '.index = parent.index;\\n';\r\n    }\r\n\r\n    //params块\r\n    var paramsEStr = 'p4';\r\n    if (retType && retType._paramsE) {\r\n      paramsEStr = retType._paramsE;\r\n    }\r\n    if (noConfig || configE.paramsExpr) {\r\n      fnStr += '_this' + _thisC + '.paramsExpr = ' + paramsEStr + ';\\n';\r\n    }\r\n\r\n    if (noConfig || configE.result) {\r\n      fnStr += '_this' + _thisC + '.result = ' + (node.content ? 'p1.exprRet(p1, ' + (newContextP ? '_' : '') + 'p2, p1.fn' + _buildFn(node.content, fns, ++fns._no, newContext, level) + ', ' + paramsEStr + ')' : 'p1.noop') + ';\\n';\r\n    }\r\n    if (noConfig || configE.inverse) {\r\n      fnStr += '_this' + _thisC + '.inverse = ' + (node.contentElse ? 'p1.exprRet(p1, ' + (newContextP ? '_' : '') + 'p2, p1.fn' + _buildFn(node.contentElse, fns, ++fns._no, newContext, level) + ', ' + paramsEStr + ')' : 'p1.noop') + ';\\n';\r\n    }\r\n\r\n    //渲染\r\n    fnStr += _buildRender(2, retType, {\r\n      _expr: _exprC,\r\n      _dataRefer: dataReferStr !== '' ? _dataReferC : 'none',\r\n      _this: _thisC\r\n    }, fns, level);\r\n  }\r\n  else {  //元素节点\r\n    //节点类型和typeRefer\r\n    var _typeC = counter._type++,\r\n      _type;\r\n    if (node.typeRefer) {\r\n      _type = node.typeRefer.props[0].prop.name;\r\n    }\r\n    else {\r\n      _type = node.type.toLowerCase();\r\n    }\r\n\r\n    var typeStr;\r\n    if (!useString) {\r\n      typeStr = 'p1.components[\\'' + _type + '\\'] ? p1.components[\\'' + _type + '\\'] : \\'' + _type + '\\'';\r\n    }\r\n    else {\r\n      typeStr = '\\'' + _type + '\\'';\r\n    }\r\n\r\n    if (node.typeRefer) {\r\n      var _typeReferC = counter._typeRefer++,\r\n        valueStrT = _buildProps(node.typeRefer, counter, fns);\r\n      if (utils.isObject(valueStrT)) {\r\n        fnStr += valueStrT.filterStr;\r\n        valueStrT = valueStrT.valueStr;\r\n      }\r\n\r\n      fnStr += '\\nvar _typeRefer' + _typeReferC + ' = ' + valueStrT + ';\\n';\r\n      fnStr += 'var _type' + _typeC + ' = _typeRefer' + _typeReferC + ' ? _typeRefer' + _typeReferC + ' : (' + typeStr + ');\\n';\r\n    }\r\n    else {\r\n      fnStr += '\\nvar _type' + _typeC + ' = ' + typeStr + ';\\n';\r\n    }\r\n\r\n    //节点参数\r\n    var params = node.params,\r\n      paramsExpr = node.paramsExpr,\r\n      paramsStr = '';\r\n    if (params || paramsExpr) {\r\n      var _paramsC = counter._params++;\r\n      paramsStr = 'var _params' + _paramsC + ' = ';\r\n\r\n      //params块\r\n      if (paramsExpr) {\r\n        var _paramsEC = counter._paramsE++;\r\n        paramsStr += (useString ? '\\'\\'' : 'null') + ';\\n';\r\n        paramsStr += 'var _paramsE' + _paramsEC + ' = {};\\n';\r\n\r\n        //params块的子节点\r\n        paramsStr += _buildContent(paramsExpr.content, fns, counter, { _paramsE: '_paramsE' + _paramsEC });\r\n\r\n        //合并params块的值\r\n        if (!useString) {\r\n          paramsStr += '\\n_params' + _paramsC + ' = _paramsE' + _paramsEC + ';\\n';\r\n          //paramsStr += '\\np1.assign(_params' + _paramsC + ', _paramsE' + _paramsEC + ');\\n';\r\n        }\r\n        else {\r\n          var keys = '';\r\n          utils.each(params, function (v, k, i, l) {\r\n            if (i == 0) {\r\n              keys += '{ ';\r\n            }\r\n            keys += k + ': 1';\r\n\r\n            if (i < l - 1) {\r\n              keys += ', '\r\n            }\r\n            else {\r\n              keys += ' }';\r\n            }\r\n          }, false, false);\r\n          paramsStr += '_params' + _paramsC + ' += p1.assignStringProp(_paramsE' + _paramsEC + ', ' + (keys === '' ? 'null' : keys) + ');\\n';\r\n        }\r\n      }\r\n\r\n      if (params) {\r\n        var paramKeys = Object.keys(params),\r\n          len = paramKeys.length,\r\n          filterStr = '';\r\n\r\n        if (!useString && !paramsExpr) {\r\n          paramsStr += '{\\n';\r\n        }\r\n\r\n        utils.each(paramKeys, function (k, i) {\r\n          var valueStr = _buildProps(params[k], counter, fns);\r\n          if (utils.isObject(valueStr)) {\r\n            filterStr += valueStr.filterStr;\r\n            valueStr = valueStr.valueStr;\r\n          }\r\n\r\n          if (!useString && k === 'style') {  //将style字符串转换为对象\r\n            valueStr = 'p1.styleProps(' + valueStr + ')';\r\n          }\r\n\r\n          var key = k,\r\n            onlyKey = ('\\'' + key + '\\'') === valueStr;\r\n          if (!useString) {\r\n            key = utils.fixPropName(k);\r\n          }\r\n          if (!paramsExpr) {\r\n            if (!useString) {\r\n              paramsStr += '  \\'' + key + '\\': ' + (!onlyKey ? valueStr : 'true') + (i < len - 1 ? ',\\n' : '');\r\n            }\r\n            else {\r\n              paramsStr += (i > 0 ? '  + ' : '') + '\\' ' + key + (!onlyKey ? '=\"\\' + ' + valueStr + ' + \\'\"\\'' : ' \\'') + (i == len - 1 ? ';' : '') + '\\n';\r\n            }\r\n          }\r\n          else {\r\n            if (!useString) {\r\n              paramsStr += '_params' + _paramsC + '[\\'' + key + '\\'] = ' + (!onlyKey ? valueStr : 'true') + ';\\n';\r\n            }\r\n            else {\r\n              paramsStr += '_params' + _paramsC + ' += \\' ' + key + (!onlyKey ? '=\"\\' + ' + valueStr + ' + \\'\"\\'' : ' \\'') + ';\\n';\r\n            }\r\n          }\r\n        }, false, false);\r\n\r\n        if (!useString && !paramsExpr) {\r\n          paramsStr += '\\n};\\n';\r\n        }\r\n\r\n        if (filterStr !== '') {\r\n          paramsStr = filterStr + paramsStr;\r\n        }\r\n      }\r\n\r\n      fnStr += paramsStr;\r\n    }\r\n\r\n    var _compParamC, _childrenC;\r\n    if (!useString) {  //组件引擎参数\r\n      _compParamC = counter._compParam++;\r\n      fnStr += 'var _compParam' + _compParamC + ' = [_type' + _typeC + ', ' + (paramsStr !== '' ? '_params' + _paramsC : 'null') + '];\\n';\r\n    }\r\n    else {  //子节点字符串\r\n      _childrenC = counter._children++;\r\n      fnStr += 'var _children' + _childrenC + ' = \\'\\';\\n';\r\n    }\r\n\r\n    //子节点\r\n    fnStr += _buildContent(node.content, fns, counter, !useString\r\n      ? { _compParam: '_compParam' + _compParamC }\r\n      : { _children: '_children' + _childrenC }, level != null ? level + 1 : level);\r\n\r\n    //渲染\r\n    fnStr += _buildRender(3, retType, !useString\r\n      ? { _compParam: _compParamC }\r\n      : { _type: _typeC, _params: paramsStr !== '' ? _paramsC : null, _children: _childrenC, _selfClose: node.selfCloseTag }, fns, level);\r\n  }\r\n\r\n  return fnStr;\r\n}\r\n\r\nfunction _buildContent(content, fns, counter, retType, level) {\r\n  var fnStr = '';\r\n  if (!content) {\r\n    return fnStr;\r\n  }\r\n\r\n  utils.each(content, function (node) {\r\n    fnStr += _buildNode(node, fns, counter, retType, level);\r\n  }, false, true);\r\n\r\n  return fnStr;\r\n}\r\n\r\nfunction _buildRender(nodeType, retType, params, fns, level) {\r\n  var retStr,\r\n    useString = fns.useString;\r\n\r\n  switch (nodeType) {\r\n    case 1:  //文本节点\r\n      retStr = _buildLevelSpace(level, useString) + params.text + (!useString || level == null ? '' : ' + \\'\\\\n\\'');\r\n      break;\r\n    case 2:  //块表达式\r\n      retStr = '_expr' + params._expr + '.apply(_this' + params._this + (params._dataRefer !== 'none' ? ', _dataRefer' + params._dataRefer : '') + ')';\r\n      break;\r\n    case 3:  //元素节点\r\n      if (!useString) {\r\n        retStr = 'p1.h.apply(null, _compParam' + params._compParam + ')';\r\n      }\r\n      else {\r\n        var levelSpace = _buildLevelSpace(level, useString);\r\n        retStr = levelSpace + '\\'<\\' + _type' + params._type + ' + ' + (params._params != null ? '_params' + params._params + ' + ' : '');\r\n        if (!params._selfClose) {\r\n          retStr += '\\'>\\\\n\\'';\r\n          retStr += ' + _children' + params._children + ' + ';\r\n          retStr += levelSpace + '\\'</\\' + _type' + params._type + ' + \\'>\\\\n\\'';\r\n        }\r\n        else {\r\n          retStr += '\\' />\\\\n\\'';\r\n        }\r\n      }\r\n      break;\r\n  }\r\n\r\n  //保存方式\r\n  if (retType === '1') {\r\n    return '\\nreturn ' + retStr + ';';\r\n  }\r\n  else if (retType === '2') {\r\n    if (!useString) {\r\n      return '\\nret.push(' + retStr + ');\\n';\r\n    }\r\n    else {\r\n      return '\\nret += ' + retStr + ';\\n';\r\n    }\r\n  }\r\n  else if (retType._paramsE) {\r\n    return '\\n' + retStr + ';\\n';\r\n  }\r\n  else {\r\n    if (!useString) {\r\n      return '\\n' + retType._compParam + '.push(' + retStr + ');\\n';\r\n    }\r\n    else {\r\n      return '\\n' + retType._children + ' += ' + retStr + ';\\n';\r\n    }\r\n  }\r\n}\r\n\r\nfunction _buildLevelSpace(level, useString) {\r\n  var ret = '';\r\n  if (useString && level != null && level > 0) {\r\n    ret += '\\'';\r\n    for (var i = 0; i < level; i++) {\r\n      ret += '  ';\r\n    }\r\n    ret += '\\' + ';\r\n  }\r\n  return ret;\r\n}\r\n\r\nmodule.exports = function (ast, useString) {\r\n  var fns = {\r\n    useString: useString,\r\n    _no: 0,  //块表达式函数计数\r\n    _noT: 0  //tmpl块模板函数计数\r\n  };\r\n\r\n  _buildFn(ast, fns, fns._no, null, 0);\r\n  return fns;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/compiler/buildRuntime.js\n ** module id = 15\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar SPACIAL_SYMBOLS = {\r\n  nbsp: '\\u00A0',\r\n  ensp: '\\u2002',\r\n  emsp: '\\u2003',\r\n  thinsp: '\\u2009',\r\n  zwnj: '\\u200C',\r\n  zwj: '\\u200D',\r\n  lt: '<',\r\n  gt: '>',\r\n  amp: '&'\r\n};\r\n\r\nvar REGEX_SYMBOLS = new RegExp('&(' + Object.keys(SPACIAL_SYMBOLS).join('|') + ');', 'g');\r\nfunction replace(str) {\r\n  return str.replace(REGEX_SYMBOLS, function (all, match) {\r\n    return SPACIAL_SYMBOLS[match];\r\n  });\r\n}\r\n\r\nmodule.exports = replace;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/replaceSpecialSymbol.js\n ** module id = 16\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('../core'),\r\n  tools = require('../utils/tools'),\r\n  tranElem = require('../transforms/transformElement'),\r\n  tmplRule = nj.tmplRule,\r\n  shim = require('../utils/shim');\r\n\r\n//Cache the string template by unique key\r\nnj.strTmpls = {};\r\n\r\n//Compile string template\r\nfunction compileStringTmpl(tmpl) {\r\n  var tmplKey, ret;\r\n  if (this) {  //The \"tmplKey\" parameter can be passed by the \"this\" object.\r\n    tmplKey = this.tmplKey;\r\n  }\r\n\r\n  if (tmplKey) {  //If the cache already has template data, direct return the template.\r\n    ret = nj.strTmpls[tmplKey];\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n  }\r\n\r\n  var isStr = tools.isString(tmpl),\r\n    xmls = tmpl,\r\n    args = arguments,\r\n    splitNo = 0,\r\n    params = [],\r\n    fullXml = '',\r\n    exArgs;\r\n\r\n  if (isStr) {\r\n    xmls = tmpl.split(tmplRule.externalSplit);\r\n\r\n    var pattern = tmplRule.external(),\r\n      matchArr;\r\n    exArgs = [];\r\n    while (matchArr = pattern.exec(tmpl)) {\r\n      exArgs.push(matchArr[1]);\r\n    }\r\n  }\r\n\r\n  //Connection xml string\r\n  var l = xmls.length;\r\n  tools.each(xmls, function (xml, i) {\r\n    var split = '';\r\n    if (i < l - 1) {\r\n      var last = xml.length - 1,\r\n        useShim = xml[last] === '@',\r\n        arg, isEx;\r\n\r\n      if (isStr) {\r\n        var exArg = exArgs[i],\r\n          match = exArg.match(/#(\\d+)/);\r\n\r\n        if (match && match[1] != null) {  //分隔符格式为\"${#x}\", 则按其编号顺序从nj函数参数列表中获取\r\n          arg = args[parseInt(match[1], 10) + 1];\r\n        }\r\n        else {\r\n          arg = exArg;\r\n          useShim = isEx = true;\r\n        }\r\n      }\r\n      else {\r\n        arg = args[i + 1];\r\n      }\r\n\r\n      if (!tools.isString(arg) || useShim) {\r\n        split = '_nj-split' + splitNo + '_';\r\n\r\n        //Use the shim function to convert the parameter when the front of it with a \"@\" mark.\r\n        if (useShim) {\r\n          if (isEx) {\r\n            arg = shim({ _njEx: arg });\r\n          }\r\n          else {\r\n            xml = xml.substr(0, last);\r\n            arg = shim(arg);\r\n          }\r\n        }\r\n\r\n        params.push(arg);\r\n        splitNo++;\r\n      }\r\n      else {\r\n        split = arg;\r\n      }\r\n    }\r\n\r\n    fullXml += xml + split;\r\n  }, false, true);\r\n\r\n  fullXml = _clearNotesAndBlank(fullXml);\r\n\r\n  if (tmplKey == null) {\r\n    //Get unique key\r\n    tmplKey = tools.uniqueKey(fullXml + _paramsStr(params));\r\n\r\n    ret = nj.strTmpls[tmplKey];\r\n    if (ret) {\r\n      return ret;\r\n    }\r\n  }\r\n\r\n  //Resolve string to element\r\n  ret = _checkStringElem(fullXml, params);\r\n\r\n  //Set the properties for the template object\r\n  _setTmplProps(ret, tmplKey);\r\n\r\n  //Save to the cache\r\n  nj.strTmpls[tmplKey] = ret;\r\n\r\n  return ret;\r\n}\r\n\r\n//Resolve string to element\r\nfunction _checkStringElem(xml, params) {\r\n  var root = [],\r\n    current = {\r\n      elem: root,\r\n      elemName: 'root',\r\n      parent: null\r\n    },\r\n    parent = null,\r\n    pattern = tmplRule.checkElem(),\r\n    matchArr;\r\n\r\n  while (matchArr = pattern.exec(xml)) {\r\n    var textBefore = matchArr[1],\r\n      elem = matchArr[2],\r\n      elemName = matchArr[3],\r\n      textAfter = matchArr[4];\r\n\r\n    //Text before tag\r\n    if (textBefore && textBefore !== '\\n') {\r\n      textBefore = _formatText(textBefore);\r\n      _setText(textBefore, current.elem, params);\r\n    }\r\n\r\n    //Element tag\r\n    if (elem) {\r\n      if (elemName[0] === '/') {  //Close tag\r\n        if (elemName === '/' + current.elemName) {\r\n          current = current.parent;\r\n        }\r\n      }\r\n      else if (elem[elem.length - 2] === '/') {  //Self close tag\r\n        _setSelfCloseElem(elem, elemName, current.elem, params);\r\n      }\r\n      else {  //Open tag\r\n        parent = current;\r\n        current = {\r\n          elem: [],\r\n          elemName: elemName,\r\n          parent: parent\r\n        };\r\n\r\n        parent.elem.push(current.elem);\r\n        _setElem(elem, elemName, current.elem, params);\r\n      }\r\n    }\r\n\r\n    //Text after tag\r\n    if (textAfter && textAfter !== '\\n') {\r\n      textAfter = _formatText(textAfter);\r\n      _setText(textAfter, current.elem, params);\r\n    }\r\n  }\r\n\r\n  return root;\r\n}\r\n\r\nfunction _clearNotesAndBlank(str) {\r\n  return str.replace(/<!--[\\s\\S]*?-->/g, '').replace(/>\\s+([^\\s<]*)\\s+</g, '>$1<').trim();\r\n}\r\n\r\nfunction _formatText(str) {\r\n  return str.replace(/\\n/g, '\\\\n').replace(/\\r/g, '').trim();\r\n}\r\n\r\n//Merge parameters to string\r\nfunction _paramsStr(params) {\r\n  var str = '';\r\n  tools.each(params, function (p) {\r\n    if (tools.isArray(p)) {\r\n      str += '|' + _cascadeArr(p, true);\r\n    }\r\n    else {\r\n      str += '|' + JSON.stringify(p);\r\n    }\r\n  }, false, true);\r\n\r\n  return str;\r\n}\r\n\r\nfunction _cascadeArr(p, isArr) {\r\n  var str;\r\n  if (isArr || tools.isArray(p)) {\r\n    if (p.njKey != null) {\r\n      str = '+' + p.njKey;\r\n    }\r\n    else {\r\n      str = '';\r\n      for (var i = 0, l = p.length; i < l; i++) {\r\n        str += _cascadeArr(p[i]);\r\n      }\r\n    }\r\n  }\r\n  else {\r\n    str = '+' + p;\r\n  }\r\n\r\n  return str;\r\n}\r\n\r\n//Set element node\r\nfunction _setElem(elem, elemName, elemArr, params, bySelfClose) {\r\n  var ret, paramsExpr;\r\n  if (elemName[0] === tmplRule.exprRule) {\r\n    ret = elem.substring(1, elem.length - 1);\r\n  }\r\n  else if (elemName.indexOf(tmplRule.propRule) === 0) {\r\n    ret = tmplRule.exprRule + 'prop {\\'' + elemName.substr(tmplRule.propRule.length) + '\\'}';\r\n  }\r\n  else {\r\n    var retS = _getSplitParams(elem, params);\r\n    ret = retS.elem;\r\n    paramsExpr = retS.params;\r\n  }\r\n\r\n  if (bySelfClose) {\r\n    var retC = [ret];\r\n    if (paramsExpr) {\r\n      retC.push(paramsExpr);\r\n    }\r\n\r\n    elemArr.push(retC);\r\n  }\r\n  else {\r\n    elemArr.push(ret);\r\n    if (paramsExpr) {\r\n      elemArr.push(paramsExpr);\r\n    }\r\n  }\r\n}\r\n\r\n//Extract split parameters\r\nfunction _getSplitParams(elem, params) {\r\n  var exprRule = tmplRule.exprRule,\r\n    startRule = tmplRule.startRule,\r\n    endRule = tmplRule.endRule,\r\n    paramsExpr;\r\n\r\n  //Replace the parameter like \"prop=_nj-split0_\".\r\n  elem = elem.replace(/([^\\s={}>]+)=['\"]?_nj-split(\\d+)_['\"]?/g, function (all, key, no) {\r\n    if (!paramsExpr) {\r\n      paramsExpr = [exprRule + 'params'];\r\n    }\r\n\r\n    paramsExpr.push([exprRule + \"param \" + startRule + \"'\" + key + \"'\" + endRule, params[no]]);\r\n    return '';\r\n  });\r\n\r\n  //Replace the parameter like \"{...props}\" and \"{prop}\".\r\n  elem = elem.replace(tmplRule.replaceBraceParam(), function (all, begin, prop) {\r\n    prop = prop.trim();\r\n    var propN = prop.replace(/\\.\\.\\//g, '');\r\n\r\n    if (propN.indexOf('...') === 0) {\r\n      if (!paramsExpr) {\r\n        paramsExpr = [exprRule + 'params'];\r\n      }\r\n\r\n      paramsExpr.push([exprRule + 'spreadParam ' + startRule + prop.replace(/\\.\\.\\./g, '') + endRule + '/']);\r\n      return ' ';\r\n    }\r\n    else {\r\n      return ' ' + propN + '=' + all.trim();\r\n    }\r\n  });\r\n\r\n  return {\r\n    elem: elem,\r\n    params: paramsExpr\r\n  };\r\n}\r\n\r\n//Set self close element node\r\nfunction _setSelfCloseElem(elem, elemName, elemArr, params) {\r\n  if (elemName === tmplRule.exprRule + 'else') {\r\n    elemArr.push(elem.substr(1, 5));\r\n  }\r\n  else {\r\n    _setElem(elem, elemName, elemArr, params, true);\r\n  }\r\n}\r\n\r\n//Set text node\r\nfunction _setText(text, elemArr, params) {\r\n  var pattern = /_nj-split(\\d+)_/g, matchArr,\r\n    splitNos = [];\r\n\r\n  while ((matchArr = pattern.exec(text))) {\r\n    splitNos.push(matchArr[1]);\r\n  }\r\n\r\n  if (splitNos.length) {\r\n    tools.each(text.split(/_nj-split(?:\\d+)_/), function (t) {\r\n      if (t !== '') {\r\n        elemArr.push(t);\r\n      }\r\n\r\n      var no = splitNos.shift();\r\n      if (no != null) {\r\n        elemArr.push(params[no]);\r\n      }\r\n    }, false, true);\r\n  }\r\n  else {\r\n    elemArr.push(text);\r\n  }\r\n}\r\n\r\n//Set template props\r\nfunction _setTmplProps(tmpl, key) {\r\n  tmpl.njKey = key;\r\n\r\n  tmpl.render = function () {\r\n    return nj.compile(this, this.njKey).apply(null, arguments);\r\n  };\r\n\r\n  tmpl.renderH = function () {\r\n    return nj.compileH(this, this.njKey).apply(null, arguments);\r\n  };\r\n}\r\n\r\nmodule.exports = compileStringTmpl;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/parser/checkStringElem.js\n ** module id = 17\n ** module chunks = 0\n **/","'use strict';\r\n\r\n//Converts any value to the parameter of NornJ template can be parsed.\r\nmodule.exports = function (obj) {\r\n  return {\r\n    _njShim: obj\r\n  };\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/shim.js\n ** module id = 18\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar checkStringElem = require('../parser/checkStringElem');\r\n\r\nmodule.exports = function (key) {\r\n  return function() {\r\n    return checkStringElem.apply({ tmplKey: key }, arguments);\r\n  };\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils/tmplByKey.js\n ** module id = 19\n ** module chunks = 0\n **/","'use strict';\r\n\r\nvar nj = require('./core'),\r\n  setTmplRule = require('./utils/setTmplRule');\r\n\r\nmodule.exports = function (configs) {\r\n  var delimiters = configs.delimiters,\r\n    includeParser = configs.includeParser,\r\n    createElement = configs.createElement;\r\n\r\n  if(delimiters) {\r\n    setTmplRule(delimiters);\r\n  }\r\n\r\n  if(includeParser) {\r\n    nj.includeParser = includeParser;\r\n  }\r\n\r\n  if(createElement) {\r\n    nj.createElement = createElement;\r\n  }\r\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/config.js\n ** module id = 20\n ** module chunks = 0\n **/"],"sourceRoot":""}